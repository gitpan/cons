%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 15 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Times-Roman FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /Helvetica-BoldOblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 198 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(J) 72 737.84 T
(ul) 76.82 737.84 T
(y 17, 1996) 84.69 737.84 T
72 444.68 558 444.68 2 L
2 Z
N
72 75.33 558 75.33 2 L
N
1 12 Q
(1) 552 59.9 T
2 24 Q
-0.88 (Cons: A Softwar) 207 659 S
-0.88 (e) 351.56 659 S
-0.88 (Construction System) 207 629 S
0 12 Q
(b) 207 577 T
(y Bob Sidebotham) 214.09 577 T
(rns@f) 207 561 T
(ore) 241.13 561 T
(.com) 260.04 561 T
1 10 Q
(A guide and r) 207 526.33 T
(efer) 265.44 526.33 T
(ence f) 281.91 526.33 T
(or v) 306.37 526.33 T
(ersion 1.0) 323.21 526.33 T
3 7 Q
(Cop) 207 425.32 T
(yright \050c\051 1996 FORE Systems, Inc.  All rights reserv) 218.6 425.32 T
(ed.) 368.4 425.32 T
(Permission to use, cop) 207 409.32 T
(y) 269.93 409.32 T
(, modify and distrib) 272.98 409.32 T
(ute this softw) 328.06 409.32 T
(are and its documentation for an) 365.71 409.32 T
(y purpose and without fee is hereby) 456 409.32 T
(granted, pro) 207 401.32 T
(vided that the abo) 240.72 401.32 T
(v) 290.58 401.32 T
(e cop) 293.98 401.32 T
(yright notice appear in all copies and that both that cop) 308.87 401.32 T
(yright notice and this permission) 462.78 401.32 T
(notice appear in supporting documentation, and that the name of FORE Systems, Inc. \050\322FORE Systems\323\051 not be used in) 207 393.32 T
(adv) 207 385.32 T
(ertising or publicity pertaining to distrib) 217 385.32 T
(ution of the softw) 329.06 385.32 T
(are without speci\336c, written prior permission.) 378.57 385.32 T
(FORE SYSTEMS DISCLAIMS ALL W) 207 369.32 T
(ARRANTIES WITH REGARD T) 320.5 369.32 T
(O THIS SOFTW) 416.22 369.32 T
(ARE, INCLUDING ANY W) 463.21 369.32 T
(AR-) 544.02 369.32 T
(RANTIES REGARDING INTELLECTU) 207 361.32 T
(AL PR) 323.76 361.32 T
(OPER) 343.12 361.32 T
(TY RIGHTS AND ALL IMPLIED W) 360.59 361.32 T
(ARRANTIES OF MER-) 466.87 361.32 T
(CHANT) 207 353.32 T
(ABILITY AND FITNESS FOR A P) 230.46 353.32 T
(AR) 331.89 353.32 T
(TICULAR PURPOSE.  IN NO EVENT SHALL FORE SYSTEMS BE) 341.2 353.32 T
(LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQ) 207 345.32 T
(UENTIAL D) 371.62 345.32 T
(AMA) 408.47 345.32 T
(GES OR ANY D) 424.52 345.32 T
(AMA) 472.65 345.32 T
(GES WHA) 488.7 345.32 T
(TSOEVER) 519.61 345.32 T
-0.05 (RESUL) 207 337.32 P
-0.05 (TING FR) 228.52 337.32 P
-0.05 (OM LOSS OF USE, D) 255.22 337.32 P
-0.05 (A) 319.08 337.32 P
-0.05 (T) 323.36 337.32 P
-0.05 (A OR PR) 326.98 337.32 P
-0.05 (OFITS, WHETHER IN AN A) 353.43 337.32 P
-0.05 (CTION OF CONTRA) 437.89 337.32 P
-0.05 (CT) 500.11 337.32 P
-0.05 (, NEGLIGENCE) 508.54 337.32 P
-0.1 (OR O) 207 329.32 P
-0.1 (THER T) 223.15 329.32 P
-0.1 (OR) 247.23 329.32 P
-0.1 (TIOUS A) 256.53 329.32 P
-0.1 (CTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF) 283.57 329.32 P
(THIS SOFTW) 207 321.32 T
(ARE.) 247.19 321.32 T
207 266.98 558 269.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 269.14 558 269.14 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Intr) 207 274.65 T
(oduction) 227.37 274.65 T
2 10 Q
(Cons) 207 246.32 T
3 F
( is a system for constructing, primarily) 227.56 246.32 T
(, softw) 381.62 246.32 T
(are, b) 408.74 246.32 T
(ut is quite dif) 430.75 246.32 T
(ferent from pre) 483.56 246.32 T
(vi-) 543.84 246.32 T
(ous softw) 207 234.32 T
(are construction systems) 245.51 234.32 T
3 8 Q
(1) 343.83 238.32 T
3 10 Q
(. Cons w) 347.83 234.32 T
(as designed from the ground up to deal eas-) 383.01 234.32 T
(ily with the construction of softw) 207 222.32 T
(are spread o) 339.95 222.32 T
(v) 388.11 222.32 T
(er multiple source directories. Cons) 392.96 222.32 T
(mak) 207 210.32 T
(es it easy to create b) 224.12 210.32 T
(uild scripts that are simple, understandable and maintainable.) 304.73 210.32 T
(Cons ensures that comple) 207 198.32 T
(x softw) 309.34 198.32 T
(are is easily and accurately reproducible.) 338.96 198.32 T
-0.23 (Cons uses a number of techniques to accomplish all of this. Construction scripts are just) 207 174.32 P
-0.18 (Perl scripts, making them both easy to comprehend and v) 207 162.32 P
-0.18 (ery \337e) 434.63 162.32 P
-0.18 (xible. Global scoping of) 459.57 162.32 P
-0.19 (v) 207 150.32 P
-0.19 (ariables is replaced with an import/e) 211.75 150.32 P
-0.19 (xport mechanism for sharing information between) 355.87 150.32 P
(scripts, signi\336cantly impro) 207 138.32 T
(ving the readability and maintainability of each script.) 313.8 138.32 T
2 F
(Con-) 532.94 138.32 T
207 112.98 612 132.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 120.98 339 120.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
3 9 Q
0 X
0 0 0 1 0 0 0 K
(1.) 207 106.98 T
(Cons most direct ancestor is probably) 219 106.98 T
2 F
(J) 356.99 106.98 T
(am) 360.67 106.98 T
3 F
(. A number of the ideas in Cons originated in Jam,) 371.67 106.98 T
(b) 219 95.98 T
(ut Cons is ne) 223.32 95.98 T
(v) 269.85 95.98 T
(ertheless quite dif) 274.21 95.98 T
(ferent. Y) 337.98 95.98 T
(ou can read about Jam at) 368.98 95.98 T
2 F
(http://www) 460.45 95.98 T
(.p3.com) 499.8 95.98 T
3 F
(.) 528.29 95.98 T
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Wh) 189 737.5 T
(y Cons? Wh) 201.28 737.5 T
(y not Make?) 247.34 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(2) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
(struction en) 189 683.31 T
(vir) 236.1 683.31 T
(onments) 246.76 683.31 T
3 F
( are introduced: these are Perl objects that capture the informa-) 280.09 683.31 T
(tion required for controlling the b) 189 671.31 T
(uild process. Multiple en) 322.95 671.31 T
(vironments are used when) 421.99 671.31 T
(dif) 189 659.31 T
(ferent semantics are required for generating products in the b) 199.86 659.31 T
(uild tree. Cons imple-) 443.76 659.31 T
(ments automatic dependenc) 189 647.31 T
(y analysis and uses this to globally sequence the entire) 299.94 647.31 T
-0.02 (b) 189 635.31 P
-0.02 (uild. V) 193.8 635.31 P
-0.02 (ariant b) 220.45 635.31 P
-0.02 (uilds are easily produced from a single source tree. Intelligent b) 250.49 635.31 P
-0.02 (uild sub-) 504.74 635.31 P
-0.22 (setting is possible, when w) 189 623.31 P
-0.22 (orking on localized changes. Ov) 295.5 623.31 P
-0.22 (errides can be setup to easily) 423.6 623.31 P
(o) 189 611.31 T
(v) 193.85 611.31 T
(erride b) 198.7 611.31 T
(uild instructions without modifying an) 229.32 611.31 T
(y scripts. MD5 cryptographic) 383.07 611.31 T
2 F
(signa-) 503.33 611.31 T
(tur) 189 599.31 T
(es) 200.3 599.31 T
3 F
( are associated with deri) 208.63 599.31 T
(v) 305.02 599.31 T
(ed \336les, and are used to accurately determine whether a) 309.87 599.31 T
(gi) 189 587.31 T
(v) 196.53 587.31 T
(en \336le needs to be reb) 201.38 587.31 T
(uilt.) 288.66 587.31 T
(While of) 189 563.31 T
(fering all of the abo) 224.02 563.31 T
(v) 302.74 563.31 T
(e, and more, Cons remains simple and easy to use. This) 307.59 563.31 T
(will, hopefully) 189 551.31 T
(, become clear as you read the remainder of this document.) 247.24 551.31 T
189 494.98 540 497.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 497.13 540 497.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Why Cons? Why not Mak) 189 502.64 T
(e?) 331.17 502.64 T
3 10 Q
(Cons is a) 189 474.31 T
2 F
(mak) 228.17 474.31 T
(e) 244.73 474.31 T
3 F
( replacement. In the follo) 249.17 474.31 T
(wing paragraphs, we look at a fe) 349.73 474.31 T
(w of the unde-) 479.72 474.31 T
(sirable characteristics of mak) 189 462.31 T
(e\321and typical b) 305.81 462.31 T
(uild en) 371.71 462.31 T
(vironments based on mak) 398.81 462.31 T
(e\321that) 501.2 462.31 T
(moti) 189 450.31 T
(v) 207.09 450.31 T
(ated the de) 211.84 450.31 T
(v) 254.91 450.31 T
(elopment of Cons.) 259.76 450.31 T
0 9 Q
(Build comple) 54 420.98 T
(xity) 110.38 420.98 T
3 10 Q
-0.2 (T) 189 420.98 P
-0.2 (raditional mak) 194.76 420.98 P
-0.2 (e-based systems of an) 252.51 420.98 P
-0.2 (y size tend to become quite comple) 339.23 420.98 P
-0.2 (x. The original) 478.95 420.98 P
(mak) 189 408.98 T
(e utility and its deri) 206.12 408.98 T
(v) 283.65 408.98 T
(ati) 288.4 408.98 T
(v) 298.15 408.98 T
(es ha) 303 408.98 T
(v) 323.07 408.98 T
(e contrib) 327.92 408.98 T
(uted to this tendenc) 362.99 408.98 T
(y in a number of w) 440.89 408.98 T
(ays.) 516.61 408.98 T
-0.08 (Mak) 189 396.98 P
-0.08 (e is not good at dealing with systems that are spread o) 207.23 396.98 P
-0.08 (v) 422.07 396.98 P
-0.08 (er multiple directories. V) 426.92 396.98 P
-0.08 (ari-) 526.12 396.98 P
(ous w) 189 384.98 T
(ork-arounds are used to o) 212.51 384.98 T
(v) 314 384.98 T
(ercome this dif) 318.85 384.98 T
(\336culty; the usual choice is for mak) 378.59 384.98 T
(e to) 516.81 384.98 T
(in) 189 372.98 T
(v) 196.38 372.98 T
(ok) 201.18 372.98 T
(e itself recursi) 211.08 372.98 T
(v) 267.48 372.98 T
(ely for each sub-directory of a b) 272.33 372.98 T
(uild. This leads to complicated) 400.42 372.98 T
(code, in which it is often unclear ho) 189 360.98 T
(w a v) 332.06 360.98 T
(ariable is set, or what ef) 353.47 360.98 T
(fect the setting of a) 448.75 360.98 T
(v) 189 348.98 T
(ariable will ha) 193.75 348.98 T
(v) 250.76 348.98 T
(e on the b) 255.61 348.98 T
(uild as a whole. The mak) 294.57 348.98 T
(e scripting language has gradually) 395.01 348.98 T
(been e) 189 336.98 T
(xtended to pro) 214.67 336.98 T
(vide more possibilities, b) 272.29 336.98 T
(ut these ha) 372.65 336.98 T
(v) 415.22 336.98 T
(e lar) 420.07 336.98 T
(gely serv) 437.38 336.98 T
(ed to clutter an) 473.61 336.98 T
(already o) 189 324.98 T
(v) 225.78 324.98 T
(er e) 230.63 324.98 T
(xtended language. Often, b) 245.19 324.98 T
(uilds are done in multiple passes in order to) 353.02 324.98 T
(pro) 189 312.98 T
(vide appropriate products from one directory to another directory) 202.18 312.98 T
(. This represents a) 462.58 312.98 T
(further increase in b) 189 300.98 T
(uild comple) 269.05 300.98 T
(xity) 316.4 300.98 T
(.) 331.31 300.98 T
0 9 Q
(Build repr) 54 271.64 T
(oducibility) 96.33 271.64 T
3 10 Q
(The bane of all mak) 189 271.64 T
(es has al) 268.88 271.64 T
(w) 302.66 271.64 T
(ays been the correct handling of dependencies. Most) 309.78 271.64 T
(often, an attempt is made to do a reasonable job of dependencies within a single direc-) 189 259.64 T
(tory) 189 247.64 T
(, b) 204.46 247.64 T
(ut no serious attempt is made to do the job between directories. Ev) 214.26 247.64 T
(en when) 480.47 247.64 T
-0.42 (dependencies are w) 189 235.64 P
-0.42 (orking correctly) 266.36 235.64 P
-0.42 (, mak) 329.45 235.64 P
-0.42 (e\325) 351.15 235.64 P
-0.42 (s reliance on a simple time stamp comparison) 358.37 235.64 P
-0.31 (to determine whether a \336le is out of date with respect to its dependents is not, in general,) 189 223.64 P
(adequate for determining when a \336le should be rederi) 189 211.64 T
(v) 402.59 211.64 T
(ed. If an e) 407.44 211.64 T
(xternal library) 447.27 211.64 T
(, for) 503.55 211.64 T
(e) 189 199.64 T
(xample, is reb) 193.29 199.64 T
(uilt and then \322snapped\323 into place, the timestamps on its ne) 249.47 199.64 T
(wly created) 486.7 199.64 T
(\336les may well be earlier than the last local b) 189 187.64 T
(uild, since it w) 365.16 187.64 T
(as b) 423.95 187.64 T
(uilt before it became vis-) 439.58 187.64 T
(ible.) 189 175.64 T
0 9 Q
(V) 54 146.31 T
(ariant b) 59.46 146.31 T
(uilds) 91.79 146.31 T
3 10 Q
(Mak) 189 146.31 T
(e pro) 207.23 146.31 T
(vides only limited f) 227.35 146.31 T
(acilities for handling v) 305.31 146.31 T
(ariant b) 395.33 146.31 T
(uilds. W) 425.4 146.31 T
(ith the proliferation) 458.89 146.31 T
(of hardw) 189 134.31 T
(are platforms and the need for deb) 224.72 134.31 T
(ugg) 361.7 134.31 T
(able vs. optimized code, the ability to) 376.65 134.31 T
(easily create these v) 189 122.31 T
(ariants is essential. More importantly) 269 122.31 T
(, if v) 416.95 122.31 T
(ariants are created, it is) 435.31 122.31 T
-0.26 (important to either be able to separate the v) 189 110.31 P
-0.26 (ariants or to be able to reproduce the original) 359.93 110.31 P
-0.08 (or v) 189 98.31 P
-0.08 (ariant at will. W) 204.5 98.31 P
-0.08 (ith mak) 268.86 98.31 P
-0.08 (e it is v) 298.96 98.31 P
-0.08 (ery dif) 327.74 98.31 P
-0.08 (\336cult to separate the b) 353.8 98.31 P
-0.08 (uilds into multiple b) 441.6 98.31 P
-0.08 (uild) 522.02 98.31 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(K) 207 737.5 T
(eeping it simple) 212.66 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(3) 552 59.9 T
3 10 Q
(directories, separate from the source. And if this technique isn\325) 207 683.31 T
(t used, it\325) 458.71 683.31 T
(s also virtually) 495.66 683.31 T
(impossible to guarantee at an) 207 671.31 T
(y gi) 323.5 671.31 T
(v) 338.53 671.31 T
(en time which v) 343.38 671.31 T
(ariant is present in the tree, without) 407.29 671.31 T
(resorting to a complete reb) 207 659.31 T
(uild.) 314 659.31 T
207 602.98 558 605.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 605.13 558 605.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(K) 207 610.64 T
(eeping it simple) 215.85 610.64 T
3 10 Q
(A fe) 207 586.31 T
(w of the dif) 224.24 586.31 T
(\336culties with mak) 270.37 586.31 T
(e ha) 341.94 586.31 T
(v) 358.12 586.31 T
(e been cited abo) 362.97 586.31 T
(v) 427.52 586.31 T
(e. In this and subsequent sec-) 432.37 586.31 T
(tions, we shall introduce Cons and sho) 207 574.31 T
(w ho) 360.91 574.31 T
(w these issues are addressed.) 380.38 574.31 T
0 9 Q
(P) 72 544.98 T
(erl scripts) 77.73 544.98 T
3 10 Q
(Cons is Perl-based. That is, Cons scripts\321) 207 544.98 T
4 8 Q
(Conscript) 378.11 544.98 T
3 10 Q
( and) 421.31 544.98 T
4 8 Q
(Construct) 440.75 544.98 T
3 10 Q
( \336les, the equi) 483.95 544.98 T
(v) 539.81 544.98 T
(a-) 544.56 544.98 T
(lent to) 207 532.98 T
4 8 Q
(makefiles) 234.78 532.98 T
3 10 Q
(\321are all written in Perl. This pro) 277.98 532.98 T
(vides an immediate bene\336t: the lan-) 410.87 532.98 T
(guage for writing scripts is a f) 207 520.98 T
(amiliar one. Ev) 326.88 520.98 T
(en if you don\325) 388.11 520.98 T
(t happen to be a Perl) 444.31 520.98 T
(programmer) 207 508.98 T
(, it helps to kno) 256.03 508.98 T
(w that Perl is basically just a simple declarati) 317.73 508.98 T
(v) 498.02 508.98 T
(e language,) 502.87 508.98 T
(with a well-de\336ned \337o) 207 496.98 T
(w of control, and f) 297.02 496.98 T
(amiliar semantics. It has v) 371.07 496.98 T
(ariables that beha) 475.53 496.98 T
(v) 545.31 496.98 T
(e) 550.16 496.98 T
(basically the w) 207 484.98 T
(ay you w) 266.89 484.98 T
(ould e) 303.45 484.98 T
(xpect them to, subroutines, \337o) 328.02 484.98 T
(w-of-control, and so on.) 448.88 484.98 T
(There is no special syntax introduced for Cons. The use of Perl as a scripting language) 207 472.98 T
(simpli\336es the task of e) 207 460.98 T
(xpressing the appropriate solution to the often comple) 296.85 460.98 T
(x require-) 512.51 460.98 T
(ments of a b) 207 448.98 T
(uild.) 255.96 448.98 T
0 9 Q
(Hello, W) 72 419.64 T
(orld!) 106.96 419.64 T
3 10 Q
(T) 207 419.64 T
(o ground the follo) 212.31 419.64 T
(wing discussion, here\325) 284 419.64 T
(s ho) 373.16 419.64 T
(w you could b) 389.3 419.64 T
(uild the) 446.04 419.64 T
2 F
(Hello, W) 478.82 419.64 T
(orld!) 513.45 419.64 T
3 F
( C) 533.45 419.64 T
(application with Cons:) 207 407.64 T
4 8 Q
($env = new cons\050\051;) 162 386.98 T
(Program $env 'hello', 'hello.c';) 162 376.98 T
3 10 Q
(If you install this script in a directory) 207 353.64 T
(, naming the script) 354.95 353.64 T
4 8 Q
(Construct,) 431.89 353.64 T
3 10 Q
( and create the) 479.89 353.64 T
4 8 Q
(hello.c) 207 341.64 T
3 10 Q
( source \336le in the same directory) 240.6 341.64 T
(, then you can type) 370.48 341.64 T
4 8 Q
(cons hello) 448.8 341.64 T
3 10 Q
( to b) 496.8 341.64 T
(uild the) 514.38 341.64 T
(application:) 207 329.64 T
4 8 Q
(% cons hello) 162 308.98 T
(cc -c hello.c -o hello.o) 162 298.98 T
(cc -o hello hello.o) 162 288.98 T
0 9 Q
(Construction en) 72 260.31 T
(vir) 140.64 260.31 T
(onments) 151.47 260.31 T
3 10 Q
(A k) 207 260.31 T
(e) 221.62 260.31 T
(y simpli\336cation of Cons is the idea of a) 225.91 260.31 T
2 F
(construction en) 385.63 260.31 T
(vir) 447.17 260.31 T
(onment) 457.83 260.31 T
3 F
(. A construction) 487.27 260.31 T
(en) 207 248.31 T
(vironment is an) 216.04 248.31 T
2 F
(object) 280.76 248.31 T
3 F
( characterized by a set of k) 305.2 248.31 T
(e) 412.28 248.31 T
(y/v) 416.57 248.31 T
(alue pairs and a set of) 429.1 248.31 T
2 F
(methods.) 518.52 248.31 T
3 F
(In order to tell Cons ho) 207 236.31 T
(w to b) 299.8 236.31 T
(uild something, you in) 324.6 236.31 T
(v) 414.21 236.31 T
(ok) 419.01 236.31 T
(e the appropriate method via an) 428.91 236.31 T
(appropriate construction en) 207 224.31 T
(vironment. Consider the follo) 316.02 224.31 T
(wing e) 434.1 224.31 T
(xample:) 460.89 224.31 T
4 8 Q
($env = new cons\050) 162 203.64 T
(CC) 216 193.64 T
(=>) 252 193.64 T
('gcc',) 270 193.64 T
(LIBS) 216 183.64 T
(=>) 252 183.64 T
('libworld.a') 270 183.64 T
(\051;) 162 173.64 T
(Program $env 'hello', 'hello.c';) 162 153.64 T
3 10 Q
(In this case, rather than using the def) 207 130.31 T
(ault construction en) 354.09 130.31 T
(vironment, as is, we ha) 432.57 130.31 T
(v) 524.58 130.31 T
(e o) 529.43 130.31 T
(v) 541.22 130.31 T
(er-) 546.07 130.31 T
(ridden the v) 207 118.31 T
(alue of) 254.52 118.31 T
4 8 Q
(CC) 284.51 118.31 T
3 10 Q
( so that the GNU C Compiler equi) 294.11 118.31 T
(v) 430.8 118.31 T
(alent is used, instead. Since) 435.55 118.31 T
(this v) 207 106.31 T
(ersion of) 228.8 106.31 T
2 F
(Hello, W) 266.57 106.31 T
(orld!) 301.2 106.31 T
3 F
( requires a library) 321.2 106.31 T
(,) 391.36 106.31 T
4 8 Q
(libworld.a) 396.36 106.31 T
3 10 Q
(, we ha) 444.36 106.31 T
(v) 472.76 106.31 T
(e speci\336ed that an) 477.61 106.31 T
(y) 549.39 106.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(K) 189 737.5 T
(eeping it simple) 194.66 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(4) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
3 F
(program link) 189 683.31 T
(ed in this en) 240.84 683.31 T
(vironment should be link) 289.05 683.31 T
(ed with that library) 389.23 683.31 T
(. If the library) 464.96 683.31 T
(e) 189 671.31 T
(xists already) 193.29 671.31 T
(, well and good, b) 242.91 671.31 T
(ut if not, then we\325) 314.37 671.31 T
(ll also ha) 385.65 671.31 T
(v) 421.56 671.31 T
(e to include the statement:) 426.41 671.31 T
4 8 Q
(Library $env 'libworld', 'world.c';) 144 650.64 T
3 10 Q
-0.09 (No) 189 627.31 P
-0.09 (w if you type) 200.97 627.31 P
4 8 Q
-0.18 (cons hello) 256.14 627.31 P
3 10 Q
-0.09 (, the library will be b) 303.96 627.31 P
-0.09 (uilt before the program is link) 387.17 627.31 P
-0.09 (ed, and,) 506.31 627.31 P
(of course,) 189 615.31 T
4 8 Q
(gcc) 230.93 615.31 T
3 10 Q
( will be used to compile both modules) 245.33 615.31 T
3 8 Q
(1) 397.83 619.31 T
3 10 Q
(:) 401.83 615.31 T
189 147.29 612 167.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 155.29 321 155.29 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
3 9 Q
0 X
0 0 0 1 0 0 0 K
(1.) 189 141.29 T
(If you try this e) 201 141.29 T
(xample, you may \336nd that it doesn\325) 256.36 141.29 T
(t actually w) 383.94 141.29 T
(ork. This is almost certainly) 425.85 141.29 T
(because) 201 130.29 T
4 8 Q
(gcc) 231.74 130.29 T
3 9 Q
( is not a) 246.13 130.29 T
(v) 274.21 130.29 T
(ailable on the standard path pro) 278.48 130.29 T
(vided by Cons. In the name of reproduc-) 391.58 130.29 T
(ibility) 201 119.29 T
(, Cons tightly controls the e) 221.93 119.29 T
(x) 321.29 119.29 T
(ecution en) 325.66 119.29 T
(vironment of commands, including the) 362.54 119.29 T
4 8 Q
(PATH) 504.53 119.29 T
3 9 Q
(v) 201 108.29 T
(ariable, so e) 205.27 108.29 T
(v) 248.29 108.29 T
(en if) 252.65 108.29 T
4 8 Q
(gcc) 271.15 108.29 T
3 9 Q
( is on your o) 285.55 108.29 T
(wn path, it may not be visible from Cons. More on this) 330.32 108.29 T
(later in the document.) 201 97.29 T
4 8 Q
(% cons hello) 144 594.64 T
(gcc -c hello.c -o hello.o) 144 584.64 T
(gcc -c world.c -o world.o) 144 574.64 T
(ar r libworld.a world.o) 144 564.64 T
(ar: creating libworld.a) 144 554.64 T
(ranlib libworld.a) 144 544.64 T
(gcc -o hello hello.o libworld.a) 144 534.64 T
0 9 Q
(A) 54 505.98 T
(utomatic and complete) 60.23 505.98 T
(dependenc) 54 494.98 T
(y anal) 101.42 494.98 T
(ysis) 126.8 494.98 T
3 10 Q
(W) 189 505.98 T
(ith Cons, dependencies are handled automatically) 198.04 505.98 T
(. Continuing the pre) 395.69 505.98 T
(vious e) 475.44 505.98 T
(xample,) 503.9 505.98 T
(note that when we modify) 189 493.98 T
4 8 Q
(world.c) 295.93 493.98 T
3 10 Q
(,) 329.53 493.98 T
4 8 Q
(world.o) 334.53 493.98 T
3 10 Q
( is recompiled,) 368.13 493.98 T
4 8 Q
(libworld.a) 429.79 493.98 T
3 10 Q
( recreated, and) 477.79 493.98 T
4 8 Q
(hello) 189 481.98 T
3 10 Q
( relink) 213 481.98 T
(ed:) 238.73 481.98 T
4 8 Q
(% touch world.c) 144 461.31 T
(% cons hello) 144 451.31 T
(gcc -c world.c -o world.o) 144 441.31 T
(ar r libworld.a world.o) 144 431.31 T
(ar: creating libworld.a) 144 421.31 T
(ranlib libworld.a) 144 411.31 T
(gcc -o hello hello.o libworld.a) 144 401.31 T
3 10 Q
(This is a relati) 189 377.98 T
(v) 245.69 377.98 T
(ely simple e) 250.54 377.98 T
(xample: Cons \322kno) 298.72 377.98 T
(ws\323 w) 375.69 377.98 T
(orld.o depends upon) 400.86 377.98 T
4 8 Q
(world.c) 484.74 377.98 T
3 10 Q
(,) 518.34 377.98 T
(because the dependenc) 189 365.98 T
(y is e) 280.48 365.98 T
(xplicitly set up by the) 301.44 365.98 T
4 8 Q
(Library) 390.61 365.98 T
3 10 Q
( method. It also kno) 424.21 365.98 T
(ws that) 503.68 365.98 T
4 8 Q
(libworld.a) 189 353.98 T
3 10 Q
( depends upon) 237 353.98 T
4 8 Q
(world.o) 297.27 353.98 T
3 10 Q
( and that) 330.87 353.98 T
4 8 Q
(hello) 367.81 353.98 T
3 10 Q
( depends upon) 391.81 353.98 T
4 8 Q
(libworld.a) 452.08 353.98 T
3 10 Q
(, all for) 500.08 353.98 T
(similar reasons.) 189 341.98 T
(No) 189 317.98 T
(w it turns out that) 200.97 317.98 T
4 8 Q
(hello.c) 274.03 317.98 T
3 10 Q
( also includes the interf) 307.63 317.98 T
(ace de\336nition \336le,) 400.85 317.98 T
4 8 Q
(world.h) 475.29 317.98 T
3 10 Q
(:) 508.89 317.98 T
4 8 Q
(% touch world.h) 144 297.31 T
(% cons hello) 144 287.31 T
(gcc -c hello.c -o hello.o) 144 277.31 T
(gcc -o hello hello.o libworld.a) 144 267.31 T
3 10 Q
(Ho) 189 243.98 T
(w does Cons kno) 200.97 243.98 T
(w that) 269.33 243.98 T
4 8 Q
(hello.c) 296.55 243.98 T
3 10 Q
( includes) 330.15 243.98 T
4 8 Q
(world.h) 368.48 243.98 T
3 10 Q
(, and that) 402.08 243.98 T
4 8 Q
(hello.o) 441.52 243.98 T
3 10 Q
( must therefore) 475.12 243.98 T
-0.08 (be recompiled? F) 189 231.98 P
-0.08 (or no) 258.11 231.98 P
-0.08 (w) 278.61 231.98 P
-0.08 (, suf) 285.18 231.98 P
-0.08 (\336ce it to say that when considering whether or not) 302.07 231.98 P
4 8 Q
-0.16 (hello.o) 503.98 231.98 P
3 10 Q
(is up-to-date, Cons in) 189 219.98 T
(v) 274.71 219.98 T
(ok) 279.51 219.98 T
(es a scanner for its dependenc) 289.41 219.98 T
(y) 408.94 219.98 T
(,) 413.29 219.98 T
4 8 Q
(hello.c) 418.29 219.98 T
3 10 Q
(. This scanner enu-) 451.89 219.98 T
(merates the \336les included by) 189 207.98 T
4 8 Q
(hello.c) 305.93 207.98 T
3 10 Q
( to come up with a list of further dependencies,) 339.53 207.98 T
(be) 189 195.98 T
(yond those made e) 198.29 195.98 T
(xplicit by the Cons script. This process is recursi) 272.85 195.98 T
(v) 467.31 195.98 T
(e: an) 472.16 195.98 T
(y \336les) 491.17 195.98 T
(included by included \336les will also be scanned.) 189 183.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Building lar) 207 737.5 T
(g) 250.89 737.5 T
(e trees\321still just as simple) 255.86 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(5) 552 59.9 T
3 10 Q
-0.15 (Isn\325) 207 683.31 P
-0.15 (t this e) 222.37 683.31 P
-0.15 (xpensi) 248.59 683.31 P
-0.15 (v) 274.45 683.31 P
-0.15 (e? The answer is\321it depends. If you do a full b) 279.3 683.31 P
-0.15 (uild of a lar) 467.83 683.31 P
-0.15 (ge system,) 513.58 683.31 P
(the scanning time is insigni\336cant. If you do a reb) 207 671.31 T
(uild of a lar) 402.34 671.31 T
(ge system, then Cons will) 448.54 671.31 T
(spend a f) 207 659.31 T
(air amount of time thinking about it before it decides that nothing has to be) 243 659.31 T
(done \050although not necessarily more time than mak) 207 647.31 T
(e!) 412.15 647.31 T
3 8 Q
(1) 419.92 651.31 T
3 10 Q
(\051. The good ne) 423.92 647.31 T
(ws is that Cons) 481.99 647.31 T
-0.23 (mak) 207 635.31 P
-0.23 (es it v) 224.12 635.31 P
-0.23 (ery easy to intelligently subset your b) 247.4 635.31 P
-0.23 (uild, when you are w) 395.83 635.31 P
-0.23 (orking on localized) 478.97 635.31 P
(changes.) 207 623.31 T
207 222.29 612 242.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 230.29 339 230.29 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
3 9 Q
0 X
0 0 0 1 0 0 0 K
(1.) 207 216.29 T
(I ran a test on a moderate-sized system \050about 1500 source \336les\051 that had recently been con-) 219 216.29 T
(v) 219 205.29 T
(erted to Cons from GNU mak) 223.37 205.29 T
(e. F) 330.51 205.29 T
(or this system, the reb) 343.88 205.29 T
(uild time decreased by 50% \050both in) 422.94 205.29 T
(CPU and real time\051 when con) 219 194.29 T
(v) 325.37 194.29 T
(erted to Cons. This is most lik) 329.74 194.29 T
(ely because the GNU mak) 437.91 194.29 T
(e solu-) 532.29 194.29 T
(tion in) 219 183.29 T
(v) 241.9 183.29 T
(olv) 246.22 183.29 T
(ed man) 257.58 183.29 T
(y recursi) 283.69 183.29 T
(v) 314.71 183.29 T
(e in) 319.07 183.29 T
(v) 331.96 183.29 T
(ocations of mak) 336.28 183.29 T
(e, and man) 393.68 183.29 T
(y redundant \322stat\323 system calls.) 432.79 183.29 T
0 F
(A) 72 593.98 T
(utomatic global b) 78.23 593.98 T
(uild) 152.56 593.98 T
(sequencing) 72 582.98 T
3 10 Q
(Because Cons does full and accurate) 207 593.98 T
(dependenc) 355.85 593.98 T
(y analysis, and does this globally) 398.46 593.98 T
(, for) 530.03 593.98 T
(the entire b) 207 581.98 T
(uild, Cons is able to use this information to tak) 251.79 581.98 T
(e full control of the) 438.92 581.98 T
2 F
(sequenc-) 518.63 581.98 T
(ing) 207 569.98 T
3 F
( of the b) 219.78 569.98 T
(uild. This sequencing is e) 252.63 569.98 T
(vident in the abo) 354.32 569.98 T
(v) 421.11 569.98 T
(e e) 425.96 569.98 T
(xamples, and is equi) 437.19 569.98 T
(v) 518.6 569.98 T
(alent to) 523.35 569.98 T
(what you w) 207 557.98 T
(ould e) 253.56 557.98 T
(xpect for mak) 278.13 557.98 T
(e, gi) 333.57 557.98 T
(v) 350.54 557.98 T
(en a full set of dependencies. W) 355.39 557.98 T
(ith Cons, this) 483.01 557.98 T
(e) 207 545.98 T
(xtends tri) 211.29 545.98 T
(vially to lar) 248.54 545.98 T
(ger) 294.47 545.98 T
(, multi-directory b) 306.84 545.98 T
(uilds. As a result, all of the comple) 379.69 545.98 T
(xity) 519.25 545.98 T
-0.23 (in) 207 533.98 P
-0.23 (v) 214.38 533.98 P
-0.23 (olv) 219.18 533.98 P
-0.23 (ed in making sure that a b) 231.81 533.98 P
-0.23 (uild is or) 333.57 533.98 P
-0.23 (g) 368.49 533.98 P
-0.23 (anized correctly\321including multi-pass hierar-) 373.44 533.98 P
(chical b) 207 521.98 T
(uilds\321is eliminated. W) 238.18 521.98 T
(e\325) 332.66 521.98 T
(ll discuss this further in the ne) 340.33 521.98 T
(xt sections.) 460.73 521.98 T
207 465.64 558 468.64 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 467.8 558 467.8 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Building lar) 207 473.31 T
(g) 274.55 473.31 T
(e tr) 281.41 473.31 T
(ees\321still just as simple) 299.95 473.31 T
0 9 Q
(A hierar) 72 439.64 T
(c) 105.83 439.64 T
(h) 110.75 439.64 T
(y of b) 116.06 439.64 T
(uild scripts) 139.89 439.64 T
3 10 Q
(A lar) 207 439.64 T
(ger b) 227.09 439.64 T
(uild, in Cons, is or) 247.16 439.64 T
(g) 320.88 439.64 T
(anized by creating a hierarch) 325.83 439.64 T
(y of) 441.29 439.64 T
2 F
(b) 459.62 439.64 T
(uild scripts) 464.42 439.64 T
3 F
(. At the top) 509.15 439.64 T
(of the tree is a script called) 207 427.64 T
4 8 Q
(Construct) 317.25 427.64 T
3 10 Q
(. The rest of the scripts, by con) 360.45 427.64 T
(v) 483.64 427.64 T
(ention, are each) 488.49 427.64 T
(called) 207 415.64 T
4 8 Q
(Conscript) 233.38 415.64 T
3 10 Q
(. These scripts are connected together) 276.58 415.64 T
(, v) 426.69 415.64 T
(ery simply) 436.54 415.64 T
(, by the) 478.39 415.64 T
4 8 Q
(Build) 510.61 415.64 T
3 10 Q
(,) 534.61 415.64 T
4 8 Q
(Export) 207 403.64 T
3 10 Q
(, and) 235.8 403.64 T
4 8 Q
(Import) 257.74 403.64 T
3 10 Q
( commands.) 286.54 403.64 T
3 8 Q
(2) 334.87 407.64 T
3 9 Q
(2.) 207 169.29 T
(These are not methods, b) 219 169.29 T
(ut are subroutines pro) 309.05 169.29 T
(vided by Cons and made a) 387.16 169.29 T
(v) 482.21 169.29 T
(ailable to b) 486.49 169.29 T
(uild) 526.3 169.29 T
(scripts.) 219 158.29 T
0 F
(The) 72 374.31 T
4 8 Q
(Build) 90.5 374.31 T
0 9 Q
( command) 114.5 374.31 T
3 10 Q
(The) 207 374.31 T
4 8 Q
(Build) 225.05 374.31 T
3 10 Q
( command tak) 249.05 374.31 T
(es a list of) 305.61 374.31 T
4 8 Q
(Conscript) 348.94 374.31 T
3 10 Q
( \336le names, and arranges for them to be) 392.14 374.31 T
(included in the b) 207 362.31 T
(uild. F) 273.74 362.31 T
(or e) 299.71 362.31 T
(xample) 314.83 362.31 T
3 8 Q
(3) 344.27 366.31 T
3 10 Q
(:) 348.27 362.31 T
3 9 Q
(3.) 207 144.29 T
(The) 219 144.29 T
4 8 Q
(qw) 235.24 144.29 T
3 9 Q
( is just syntactic sug) 244.85 144.29 T
(ar courtesy of Perl that allo) 317.3 144.29 T
(ws you to write do) 414.81 144.29 T
(wn a list of strings) 481.58 144.29 T
(without quoting them or separating them by commas. Y) 219 133.29 T
(ou\325) 419.25 133.29 T
(ll also see, without further com-) 431.16 133.29 T
(ment, other quoting styles, including single and double quotes,) 219 122.29 T
4 8 Q
(q) 447 122.29 T
3 9 Q
(, and) 451.8 122.29 T
4 8 Q
(qq) 471.54 122.29 T
3 9 Q
(. See the) 481.14 122.29 T
2 F
(P) 514.14 122.29 T
(erl Refer-) 518.92 122.29 T
(ence Manual) 219 111.29 T
3 F
( for details.) 265.74 111.29 T
4 8 Q
(Build qw\050) 162 341.64 T
(drivers/display/Conscript) 216 331.64 T
(drivers/mouse/Conscript) 216 321.64 T
(parser/Conscript) 216 311.64 T
(utilities/Conscript) 216 301.64 T
(\051;) 162 291.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Building lar) 189 737.5 T
(g) 232.89 737.5 T
(e trees\321still just as simple) 237.86 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(6) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
3 F
(This is a simple tw) 189 683.31 T
(o-le) 264.46 683.31 T
(v) 279.76 683.31 T
(el hierarch) 284.61 683.31 T
(y of b) 327.04 683.31 T
(uild scripts: all the subsidiary) 350.17 683.31 T
4 8 Q
(Conscript) 470.45 683.31 T
3 10 Q
( \336les) 513.65 683.31 T
(are mentioned in the top-le) 189 671.31 T
(v) 296.51 671.31 T
(el) 301.36 671.31 T
4 8 Q
(Construct) 311.08 671.31 T
3 10 Q
( \336le. Notice that not all directories in the tree) 354.28 671.31 T
(necessarily ha) 189 659.31 T
(v) 245.17 659.31 T
(e b) 250.02 659.31 T
(uild scripts associated with them.) 261.76 659.31 T
-0.19 (This could also be written as a multi-le) 189 635.31 P
-0.19 (v) 343.23 635.31 P
-0.19 (el script. F) 348.08 635.31 P
-0.19 (or e) 390.05 635.31 P
-0.19 (xample, the) 404.98 635.31 P
4 8 Q
-0.37 (Construct) 453.75 635.31 P
3 10 Q
-0.19 ( \336le might) 496.95 635.31 P
(contain this command:) 189 623.31 T
4 8 Q
(Build qw\050) 144 602.64 T
(parser/Conscript) 198 592.64 T
(drivers/Conscript) 198 582.64 T
(utilities/Conscript) 198 572.64 T
(\051;) 144 562.64 T
3 10 Q
(and the) 189 539.31 T
4 8 Q
(Conscript) 220.66 539.31 T
3 10 Q
( \336le in the) 263.86 539.31 T
4 8 Q
(drivers) 306.64 539.31 T
3 10 Q
( directory might contain this:) 340.24 539.31 T
4 8 Q
(Build qw\050) 144 508.64 T
(display/Conscript) 198 498.64 T
(mouse/Conscript) 198 488.64 T
(\051;) 144 478.64 T
3 10 Q
(Experience has sho) 189 455.31 T
(wn that the former model is a little easier to understand, since the) 265.95 455.31 T
(whole construction tree is laid out in front of you, at the top-le) 189 443.31 T
(v) 437.89 443.31 T
(el. Hybrid schemes are) 442.74 443.31 T
(also possible. A separately maintained component that needs to be incorporated into a) 189 431.31 T
(b) 189 419.31 T
(uild tree, for e) 193.8 419.31 T
(xample, might hook into the b) 250.3 419.31 T
(uild tree in one place, b) 370.66 419.31 T
(ut de\336ne its o) 464.33 419.31 T
(wn) 518.25 419.31 T
(construction hierarch) 189 407.31 T
(y) 273.65 407.31 T
(.) 278 407.31 T
0 9 Q
(Relative) 54 377.98 T
(, top-relative) 88.61 377.98 T
(, and) 142.21 377.98 T
(absolute \336le names) 54 366.98 T
3 10 Q
-0.17 (Y) 189 377.98 P
-0.17 (ou may ha) 195.12 377.98 P
-0.17 (v) 236.25 377.98 P
-0.17 (e noticed that the \336le names speci\336ed to the Build command are relati) 241.1 377.98 P
-0.17 (v) 518.26 377.98 P
-0.17 (e to) 523.11 377.98 P
(the location of the script it is in) 189 365.98 T
(v) 313.32 365.98 T
(ok) 318.12 365.98 T
(ed from. This is generally true for other \336lename) 328.02 365.98 T
(ar) 189 353.98 T
(guments to other commands, too, although we might as well mention here that if you) 196.59 353.98 T
(be) 189 341.98 T
(gin a \336le name with a hash mark, \322#\323, then that \336le is interpreted relati) 198.29 341.98 T
(v) 480.22 341.98 T
(e to the top-) 485.07 341.98 T
(le) 189 329.98 T
(v) 195.97 329.98 T
(el directory \050where the Construct \336le resides\051. And, not surprisingly) 200.82 329.98 T
(, if you be) 471.52 329.98 T
(gin it) 511.92 329.98 T
(with \322/\323, then it is considered to be an absolute pathname. This is true e) 189 317.98 T
(v) 474.27 317.98 T
(en on systems) 479.12 317.98 T
(which use a back slash rather than a forw) 189 305.98 T
(ard slash to name absolute paths.) 353.85 305.98 T
0 9 Q
(Scope of v) 54 276.64 T
(ariab) 99.33 276.64 T
(les) 120.75 276.64 T
3 10 Q
-0.12 (Each) 189 276.64 P
4 8 Q
-0.22 (Conscript) 211.37 276.64 P
3 10 Q
-0.12 ( \336le, and also the top-le) 254.57 276.64 P
-0.12 (v) 347.62 276.64 P
-0.12 (el) 352.47 276.64 P
4 8 Q
-0.22 (Construct) 362.07 276.64 P
3 10 Q
-0.12 ( \336le, be) 405.27 276.64 P
-0.12 (gins life in a separate Perl) 434.61 276.64 P
(package. Except for the) 189 264.64 T
4 8 Q
(Construct) 285.91 264.64 T
3 10 Q
( \336le, which gets some of the command line ar) 329.11 264.64 T
(gu-) 511.13 264.64 T
(ments, the symbol table for each script is empty) 189 252.64 T
(. All of the v) 379.72 252.64 T
(ariables that are set, there-) 430.3 252.64 T
-0.11 (fore, are set by the script itself\321not by some e) 189 240.64 P
-0.11 (xternal script. V) 375.03 240.64 P
-0.11 (ariables can be e) 438.4 240.64 P
-0.11 (xplicitly) 504.27 240.64 P
2 F
(imported) 189 228.64 T
3 F
( by a script from its parent script. T) 225.11 228.64 T
(o import a v) 365.68 228.64 T
(ariable, it must ha) 414.04 228.64 T
(v) 485.5 228.64 T
(e been) 490.35 228.64 T
2 F
-0.09 (e) 189 216.64 P
-0.09 (xported) 193.24 216.64 P
3 F
-0.09 ( by the parent and initialized \050otherwise an error will occur\051. It is therefore pos-) 223.79 216.64 P
(sible to determine, from looking at a single script, e) 189 204.64 T
(xactly where each v) 395.22 204.64 T
(ariable in that) 474.66 204.64 T
(script is set.) 189 192.64 T
0 9 Q
(The) 54 163.31 T
4 8 Q
(Export) 72.5 163.31 T
0 9 Q
( command) 101.3 163.31 T
3 10 Q
(The) 189 163.31 T
4 8 Q
(Export) 207.05 163.31 T
3 10 Q
( command is used as in the follo) 235.85 163.31 T
(wing e) 364.76 163.31 T
(xample:) 391.55 163.31 T
4 8 Q
($ENV = new cons\050\051;) 144 142.64 T
($INCLUDE = "#export/include";) 144 132.64 T
($LIB = "#export/lib";) 144 122.64 T
(Export qw\050 ENV INCLUDE LIB \051;) 144 112.64 T
(Build qw\050 util/Conscript \051;) 144 102.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Building lar) 207 737.5 T
(g) 250.89 737.5 T
(e trees\321still just as simple) 255.86 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(7) 552 59.9 T
3 10 Q
(The v) 207 683.31 T
(alues of the simple v) 229.8 683.31 T
(ariables mentioned in the) 312.32 683.31 T
4 8 Q
(Export) 415.64 683.31 T
3 10 Q
( list will be squirreled a) 444.44 683.31 T
(w) 538.45 683.31 T
(ay) 545.57 683.31 T
-0.28 (by an) 207 671.31 P
-0.28 (y subsequent) 228.51 671.31 P
4 8 Q
-0.55 (Build) 282.38 671.31 P
3 10 Q
-0.28 ( commands. The) 306.38 671.31 P
4 8 Q
-0.55 (Export) 374.4 671.31 P
3 10 Q
-0.28 ( command will only e) 403.2 671.31 P
-0.28 (xport Perl) 489.13 671.31 P
2 F
-0.28 ( scalar) 528.57 671.31 P
3 F
-0.04 (v) 207 659.31 P
-0.04 (ariables, that is, v) 211.75 659.31 P
-0.04 (ariables whose name be) 281.64 659.31 P
-0.04 (gins with) 376.61 659.31 P
4 8 Q
-0.08 ($) 415.97 659.31 P
3 10 Q
-0.04 (. Other v) 420.77 659.31 P
-0.04 (ariables, objects, etc. can) 455.7 659.31 P
(be e) 207 647.31 T
(xported by reference\321b) 223.23 647.31 T
(ut all scripts will refer to the same object, and this object) 320.77 647.31 T
(should be considered to be read-only by the subsidiary scripts and by the original) 207 635.31 T
(e) 207 623.31 T
(xporting script. It\325) 211.29 623.31 T
(s acceptable, ho) 283.79 623.31 T
(we) 347.13 623.31 T
(v) 358.54 623.31 T
(er) 363.39 623.31 T
(, to assign a ne) 370.76 623.31 T
(w v) 429.67 623.31 T
(alue to the e) 444.14 623.31 T
(xported scalar) 492.59 623.31 T
(v) 207 611.31 T
(ariable\321that w) 211.75 611.31 T
(on\325) 273.58 611.31 T
(t change the underlying v) 286.73 611.31 T
(ariable referenced. This sequence, for) 388.13 611.31 T
(e) 207 599.31 T
(xample, is OK:) 211.29 599.31 T
4 8 Q
($ENV = new cons\050\051;) 162 578.64 T
(Export qw\050 ENV INCLUDE LIB \051;) 162 568.64 T
(Build qw\050 util/Conscript \051;) 162 558.64 T
($ENV = new cons\050CFLAGS => '-O'\051;) 162 548.64 T
(Build qw\050 other/Conscript \051;) 162 538.64 T
3 10 Q
(It doesn\325) 207 515.31 T
(t matter whether the v) 242.09 515.31 T
(ariable is set before or after the) 329.6 515.31 T
4 8 Q
(Export) 456.5 515.31 T
3 10 Q
( command. The) 485.3 515.31 T
(important thing is the v) 207 503.31 T
(alue of the v) 300.09 503.31 T
(ariable at the time the) 349.55 503.31 T
4 8 Q
(Build) 438.7 503.31 T
3 10 Q
( command is e) 462.7 503.31 T
(x) 520.6 503.31 T
(ecuted.) 525.45 503.31 T
(This is what gets squirreled a) 207 491.31 T
(w) 323.78 491.31 T
(ay) 330.9 491.31 T
(. An) 339.69 491.31 T
(y subsequent) 356.76 491.31 T
4 8 Q
(Export) 411.2 491.31 T
3 10 Q
( commands, by the w) 440 491.31 T
(ay) 525.17 491.31 T
(,) 533.96 491.31 T
(in) 207 479.31 T
(v) 214.38 479.31 T
(alidate the \336rst: you must mention all the v) 219.13 479.31 T
(ariables you wish to e) 390.55 479.31 T
(xport on each) 477.61 479.31 T
4 8 Q
(Export) 207 467.31 T
3 10 Q
( command.) 235.8 467.31 T
0 9 Q
(The) 72 437.98 T
4 8 Q
(Import) 90.5 437.98 T
0 9 Q
( command) 119.3 437.98 T
3 10 Q
(V) 207 437.98 T
(ariables e) 213.11 437.98 T
(xported by the) 251 437.98 T
4 8 Q
(Export) 311.27 437.98 T
3 10 Q
( command can be imported into subsidiary scripts by) 340.07 437.98 T
(the) 207 425.98 T
4 8 Q
(Import) 221.72 425.98 T
3 10 Q
( command. The subsidiary script al) 250.52 425.98 T
(w) 390.96 425.98 T
(ays imports v) 398.08 425.98 T
(ariables directly from the) 451.72 425.98 T
(superior script. Consider this e) 207 413.98 T
(xample:) 329.34 413.98 T
4 8 Q
(Import qw\050 ENV INCLUDE \051;) 162 393.31 T
3 10 Q
-0.34 (This is only le) 207 369.98 P
-0.34 (g) 262.76 369.98 P
-0.34 (al if the parent script e) 267.71 369.98 P
-0.34 (xported both) 355.54 369.98 P
4 8 Q
-0.66 ($ENV) 408.18 369.98 P
3 10 Q
-0.34 ( and) 427.38 369.98 P
4 8 Q
-0.66 ($INCLUDE) 446.13 369.98 P
3 10 Q
-0.34 (. It also must ha) 484.53 369.98 P
-0.34 (v) 546.55 369.98 P
-0.34 (e) 551.41 369.98 P
(gi) 207 357.98 T
(v) 214.53 357.98 T
(en each of these v) 219.38 357.98 T
(ariables v) 290.77 357.98 T
(alues. It is OK for the subsidiary script to only import a) 329.12 357.98 T
(subset of the e) 207 345.98 T
(xported v) 264.34 345.98 T
(ariables \050in this e) 302.14 345.98 T
(xample,) 370.59 345.98 T
4 8 Q
($LIB) 405.03 345.98 T
3 10 Q
(, which w) 424.23 345.98 T
(as e) 463.29 345.98 T
(xported by the pre-) 478.41 345.98 T
(vious e) 207 333.98 T
(xample, is not imported\051.) 235.46 333.98 T
(All the imported v) 207 309.98 T
(ariables are automatically re-e) 280.36 309.98 T
(xported, so the sequence:) 401 309.98 T
4 8 Q
(Import qw \050 ENV INCLUDE \051;) 162 289.31 T
(Build qw \050 beneath-me/Conscript \051;) 162 279.31 T
3 10 Q
-0.28 (will supply both) 207 255.98 P
4 8 Q
-0.54 ($ENV) 273.66 255.98 P
3 10 Q
-0.28 ( and) 292.86 255.98 P
4 8 Q
-0.54 ($INCLUDE) 311.73 255.98 P
3 10 Q
-0.28 ( to the subsidiary \336le. If only) 350.14 255.98 P
4 8 Q
-0.54 ($ENV) 466.48 255.98 P
3 10 Q
-0.28 ( is to be e) 485.68 255.98 P
-0.28 (xported,) 522.73 255.98 P
(then the follo) 207 243.98 T
(wing will suf) 260.08 243.98 T
(\336ce:) 312.61 243.98 T
4 8 Q
(Import qw \050 ENV INCLUDE \051;) 162 223.31 T
(Export qw \050 ENV \051;) 162 213.31 T
(Build qw \050 beneath-me/Conscript \051;) 162 203.31 T
3 10 Q
(Needless to say) 207 179.98 T
(, the v) 268.56 179.98 T
(ariables may be modi\336ed locally before in) 293.03 179.98 T
(v) 461.49 179.98 T
(oking) 466.29 179.98 T
4 8 Q
(Build) 491.57 179.98 T
3 10 Q
( on the) 515.57 179.98 T
(subsidiary script.) 207 167.98 T
0 9 Q
(Build script e) 72 138.64 T
(v) 128.88 138.64 T
(aluation or) 133.7 138.64 T
(der) 179.53 138.64 T
3 10 Q
-0.05 (The only constraint on the ordering of b) 207 138.64 P
-0.05 (uild scripts is that superior scripts are e) 366.15 138.64 P
-0.05 (v) 521.92 138.64 P
-0.05 (aluated) 526.67 138.64 P
-0.2 (before their inferior scripts. The top-le) 207 126.64 P
-0.2 (v) 359.59 126.64 P
-0.2 (el) 364.44 126.64 P
4 8 Q
-0.39 (Construct) 373.96 126.64 P
3 10 Q
-0.2 ( \336le, for instance, is e) 417.16 126.64 P
-0.2 (v) 501.71 126.64 P
-0.2 (aluated \336rst,) 506.46 126.64 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(A Model f) 189 737.5 T
(or sharing \336les) 224.84 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(8) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
3 F
-0.23 (follo) 189 683.31 P
-0.23 (wed by an) 207.64 683.31 P
-0.23 (y inferior scripts. This is all you really need to kno) 248.13 683.31 P
-0.23 (w about the e) 448.09 683.31 P
-0.23 (v) 500.76 683.31 P
-0.23 (aluation) 505.51 683.31 P
(order) 189 671.31 T
(, since order is generally irrele) 209.7 671.31 T
(v) 331.08 671.31 T
(ant) 335.83 671.31 T
3 8 Q
(1) 348.05 675.31 T
3 10 Q
(. Consider the follo) 352.05 671.31 T
(wing) 429.02 671.31 T
4 8 Q
(Build) 451.52 671.31 T
3 10 Q
( command:) 475.52 671.31 T
189 191.29 612 211.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 199.29 321 199.29 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
3 9 Q
0 X
0 0 0 1 0 0 0 K
(1.) 189 185.29 T
(A notable e) 201 185.29 T
(xception to this statement is the standard) 242.35 185.29 T
4 8 Q
(Library) 391.1 185.29 T
3 9 Q
( method. This method allo) 424.7 185.29 T
(ws) 519.22 185.29 T
(you to specify the same library tar) 201 174.29 T
(get from multiple) 323.81 174.29 T
4 8 Q
(Conscript) 389.06 174.29 T
3 9 Q
( \336les. The v) 432.26 174.29 T
(arious library) 474.54 174.29 T
(members de\336ned by the dif) 201 163.29 T
(ferent scripts are aggre) 299.26 163.29 T
(g) 381.34 163.29 T
(ated into the same library) 385.8 163.29 T
(. In this case, the) 476.7 163.29 T
(order of placement of library members depends upon the order of e) 201 152.29 T
(v) 442.46 152.29 T
(aluation of the scripts.) 446.74 152.29 T
(Here is the e) 201 141.29 T
(xact e) 246.1 141.29 T
(v) 267.11 141.29 T
(aluation order: the scripts are e) 271.39 141.29 T
(v) 382.39 141.29 T
(aluated in the order presented, depth \336rst,) 386.66 141.29 T
-0.16 (e) 201 130.29 P
-0.16 (xcept that parent scripts are e) 204.86 130.29 P
-0.16 (x) 309.13 130.29 P
-0.16 (ecuted before their immediate subsidiary scripts. Each script is) 313.5 130.29 P
(e) 201 119.29 T
(v) 204.77 119.29 T
(aluated to completion before an) 209.05 119.29 T
(y other script is e) 322.89 119.29 T
(v) 384.65 119.29 T
(aluated\321the e) 388.93 119.29 T
(v) 440.94 119.29 T
(aluation of a script does) 445.21 119.29 T
-0.12 (not commence at the time the) 201 108.29 P
4 8 Q
-0.27 (Build) 308.74 108.29 P
3 9 Q
-0.12 ( command is e) 332.74 108.29 P
-0.12 (x) 384.47 108.29 P
-0.12 (ecuted, b) 388.84 108.29 P
-0.12 (ut is deferred until the end of the) 421.02 108.29 P
(current script is reached.) 201 97.29 T
4 8 Q
(Build qw\050) 144 650.64 T
(drivers/display/Conscript) 198 640.64 T
(drivers/mouse/Conscript) 198 630.64 T
(parser/Conscript) 198 620.64 T
(utilities/Conscript) 198 610.64 T
(\051;) 144 600.64 T
3 10 Q
(W) 189 577.31 T
(e\325) 197.64 577.31 T
(v) 204.91 577.31 T
(e chosen to put the script names in alphabetical order) 209.76 577.31 T
(, simply because that\325) 421.82 577.31 T
(s the) 508.48 577.31 T
-0.14 (most con) 189 565.31 P
-0.14 (v) 224.85 565.31 P
-0.14 (enient for maintenance purposes. Changing the order will mak) 229.7 565.31 P
-0.14 (e no dif) 478.19 565.31 P
-0.14 (ference) 508.22 565.31 P
(to the b) 189 553.31 T
(uild.) 218.8 553.31 T
189 496.98 540 499.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 499.13 540 499.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(A Model for sharing \336les) 189 504.64 T
0 9 Q
(Some simple con) 54 470.98 T
(ventions) 127.67 470.98 T
3 10 Q
(In an) 189 470.98 T
(y comple) 209.12 470.98 T
(x softw) 245.91 470.98 T
(are system, a method for sharing b) 275.53 470.98 T
(uild products needs to be estab-) 413.36 470.98 T
(lished. W) 189 458.98 T
(e propose a simple set of con) 226.53 458.98 T
(v) 342.22 458.98 T
(entions which are tri) 347.07 458.98 T
(vial to implement with) 428.75 458.98 T
(Cons, b) 189 446.98 T
(ut v) 219.36 446.98 T
(ery ef) 234.49 446.98 T
(fecti) 257.28 446.98 T
(v) 274.8 446.98 T
(e.) 279.65 446.98 T
(The basic rule is to require that all b) 189 422.98 T
(uild products which need to be shared between) 333.22 422.98 T
(directories are shared via an intermediate directory) 189 410.98 T
(. W) 391.62 410.98 T
(e ha) 405.26 410.98 T
(v) 421.44 410.98 T
(e typically called this) 426.29 410.98 T
4 8 Q
(export) 189 398.98 T
3 10 Q
(, and, in a C en) 217.8 398.98 T
(vironment, pro) 277.67 398.98 T
(vided con) 336.96 398.98 T
(v) 375.72 398.98 T
(entional sub-directories of this direc-) 380.57 398.98 T
(tory) 189 386.98 T
(, such as) 204.46 386.98 T
4 8 Q
(include) 241.12 386.98 T
3 10 Q
(,) 274.72 386.98 T
4 8 Q
(lib) 279.72 386.98 T
3 10 Q
(,) 294.12 386.98 T
4 8 Q
(bin) 299.12 386.98 T
3 10 Q
(, etc.) 313.52 386.98 T
(These directories are de\336ned by the top-le) 189 362.98 T
(v) 357.04 362.98 T
(el) 361.89 362.98 T
4 8 Q
(Construct) 371.61 362.98 T
3 10 Q
( \336le. A simple) 414.81 362.98 T
4 8 Q
(Construct) 473.98 362.98 T
3 10 Q
( \336le) 517.18 362.98 T
(for a) 189 350.98 T
2 F
(Hello, W) 210.1 350.98 T
(orld!) 244.73 350.98 T
3 F
( application, or) 264.73 350.98 T
(g) 324.82 350.98 T
(anized using multiple directories, might look lik) 329.77 350.98 T
(e) 522.17 350.98 T
(this:) 189 338.98 T
4 8 Q
(# Construct file for Hello, World!) 144 318.31 T
(# Where to put all our shared products.) 144 298.31 T
($EXPORT = '#export';) 144 288.31 T
(Export qw\050 CONS INCLUDE LIB BIN \051;) 144 268.31 T
(# Standard directories for sharing products.) 144 248.31 T
($INCLUDE = "$EXPORT/include";) 144 238.31 T
($LIB = "$EXPORT/lib";) 144 228.31 T
($BIN = "$EXPORT/bin";) 144 218.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(A Model f) 207 737.5 T
(or sharing \336les) 242.84 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(9) 552 59.9 T
4 8 Q
(# A standard construction environment.) 162 674.64 T
($CONS = new cons \050) 162 664.64 T
(CPPPATH => $INCLUDE,) 216 654.64 T
(# Include path for C Compilations) 342 654.64 T
(LIBPATH => $LIB) 216 644.64 T
(,) 288 644.64 T
(# Library path for linking programs) 342 644.64 T
(LIBS => '-lworld',) 216 634.64 T
(# List of standard libraries) 342 634.64 T
(\051;) 162 624.64 T
(Build qw\050) 162 604.64 T
(hello/Conscript) 216 594.64 T
(world/Conscript) 216 584.64 T
(\051;) 162 574.64 T
3 10 Q
(The) 207 551.31 T
4 8 Q
(world) 225.05 551.31 T
3 10 Q
( directory\325) 249.05 551.31 T
(s) 290.43 551.31 T
4 8 Q
(Conscript) 296.82 551.31 T
3 10 Q
( \336le looks lik) 340.02 551.31 T
(e this:) 392.43 551.31 T
4 8 Q
(# Conscript file for directory world) 162 530.64 T
(Import qw\050 CONS INCLUDE LIB \051;) 162 520.64 T
(# Install the products of this directory) 162 500.64 T
(Install $CONS $LIB, 'libworld.a';) 162 490.64 T
(Install $CONS $INCLUDE, 'world.h';) 162 480.64 T
(# Internal products) 162 460.64 T
(Library $CONS 'libworld.a', 'world.c';) 162 450.64 T
3 10 Q
(and the) 207 427.31 T
4 8 Q
(hello) 238.66 427.31 T
3 10 Q
( directory\325) 262.66 427.31 T
(s) 304.04 427.31 T
4 8 Q
(Conscript) 310.43 427.31 T
3 10 Q
( \336le looks lik) 353.63 427.31 T
(e this:) 406.04 427.31 T
4 8 Q
(# Conscript file for directory hello) 162 406.64 T
(Import qw\050 CONS BIN \051;) 162 396.64 T
(# Exported products) 162 376.64 T
(Install $CONS $BIN, 'hello';) 162 366.64 T
(# Internal products) 162 346.64 T
(Program $CONS 'hello', 'hello.c';) 162 336.64 T
3 10 Q
(T) 207 313.31 T
(o construct a) 212.31 313.31 T
2 F
(Hello, W) 265.91 313.31 T
(orld!) 300.54 313.31 T
3 F
( program with this directory structure, go to the top-le) 320.54 313.31 T
(v) 535.82 313.31 T
(el) 540.67 313.31 T
(directory) 207 301.31 T
(, and in) 242.45 301.31 T
(v) 271.77 301.31 T
(ok) 276.57 301.31 T
(e) 286.47 301.31 T
4 8 Q
(cons) 293.41 301.31 T
3 10 Q
( with the appropriate ar) 312.61 301.31 T
(guments. In the follo) 405.74 301.31 T
(wing e) 488.82 301.31 T
(xample,) 515.61 301.31 T
-0.08 (we tell Cons to b) 207 289.31 P
-0.08 (uild the directory) 274.27 289.31 P
4 8 Q
-0.15 (export) 345.42 289.31 P
3 10 Q
-0.08 (. T) 374.22 289.31 P
-0.08 (o b) 384.45 289.31 P
-0.08 (uild a directory) 396.67 289.31 P
-0.08 (, Cons recursi) 456.97 289.31 P
-0.08 (v) 511.83 289.31 P
-0.08 (ely b) 516.68 289.31 P
-0.08 (uilds) 536.13 289.31 P
-0.16 (all kno) 207 277.31 P
-0.16 (wn products within that directory \050only if the) 234.09 277.31 P
-0.16 (y need reb) 413.1 277.31 P
-0.16 (uilding, of course\051. If an) 454.24 277.31 P
-0.16 (y) 550.66 277.31 P
(of those products depend upon other products in other directories, then those will be) 207 265.31 T
(b) 207 253.31 T
(uilt, too.) 211.8 253.31 T
4 8 Q
(% cons export) 162 232.64 T
(Install world/world.h as export/include/world.h) 162 222.64 T
(cc -Iexport/include -c hello/hello.c -o hello/hello.o) 162 212.64 T
(cc -Iexport/include -c world/world.c -o world/world.o) 162 202.64 T
(ar r world/libworld.a world/world.o) 162 192.64 T
(ar: creating world/libworld.a) 162 182.64 T
(ranlib world/libworld.a) 162 172.64 T
(Install world/libworld.a as export/lib/libworld.a) 162 162.64 T
(cc -o hello/hello hello/hello.o -Lexport/lib -lworld) 162 152.64 T
(Install hello/hello as export/bin/hello) 162 142.64 T
0 9 Q
(Clean, under) 72 113.98 T
(standab) 126.38 113.98 T
(le) 160.79 113.98 T
(,) 168.39 113.98 T
-0.02 (location-independent scripts) 72 102.98 P
3 10 Q
(Y) 207 113.98 T
(ou\325) 213.12 113.98 T
(ll note that the tw) 226.35 113.98 T
(o) 296.25 113.98 T
4 8 Q
(Conscript) 303.75 113.98 T
3 10 Q
( \336les are v) 346.95 113.98 T
(ery clean and to-the-point. The) 388.18 113.98 T
(y simply) 511.61 113.98 T
-0.3 (specify products of the directory and ho) 207 101.98 P
-0.3 (w to b) 364.38 101.98 P
-0.3 (uild those products. The b) 388.59 101.98 P
-0.3 (uild instructions) 491.36 101.98 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Separating sour) 189 737.5 T
(ce and b) 249.74 737.5 T
(uild trees) 282.04 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(10) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
3 F
(are minimal: the) 189 683.31 T
(y specify which construction en) 254.4 683.31 T
(vironment to use, the name of the prod-) 381.2 683.31 T
(uct, and the name of the inputs. Note also that the scripts are location-independent: if) 189 671.31 T
(you wish to reor) 189 659.31 T
(g) 254.09 659.31 T
(anize your source tree, you are free to do so: you only ha) 259.04 659.31 T
(v) 486.28 659.31 T
(e to change) 491.13 659.31 T
-0.28 (the) 189 647.31 P
4 8 Q
-0.53 (Construct) 203.44 647.31 P
3 10 Q
-0.28 ( \336le \050in this e) 246.64 647.31 P
-0.28 (xample\051, to specify the ne) 298.17 647.31 P
-0.28 (w locations of the) 400.41 647.31 P
4 8 Q
-0.53 (Conscript) 473.18 647.31 P
3 10 Q
-0.28 ( \336les.) 516.38 647.31 P
(The use of an e) 189 635.31 T
(xport tree mak) 249.94 635.31 T
(es this goal easy) 308.16 635.31 T
(.) 372.78 635.31 T
(Note, too, ho) 189 611.31 T
(w Cons tak) 240.97 611.31 T
(es care of little details for you. All the) 285.87 611.31 T
4 8 Q
(export) 440.29 611.31 T
3 10 Q
( directories, for) 469.09 611.31 T
(e) 189 599.31 T
(xample, were made automatically) 193.29 599.31 T
(. And the installed \336les were really hard-link) 327.61 599.31 T
(ed into) 506.37 599.31 T
(the respecti) 189 587.31 T
(v) 234.57 587.31 T
(e e) 239.42 587.31 T
(xport directories, to sa) 250.65 587.31 T
(v) 339.88 587.31 T
(e space and time. This attention to detail sa) 344.73 587.31 T
(v) 517.01 587.31 T
(es) 521.86 587.31 T
(considerable w) 189 575.31 T
(ork, and mak) 249.16 575.31 T
(es it e) 301.55 575.31 T
(v) 324.63 575.31 T
(en easier to produce simple, maintainable scripts.) 329.48 575.31 T
189 518.98 540 521.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 521.13 540 521.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Separ) 189 526.64 T
(ating sour) 221.45 526.64 T
(ce and b) 278.11 526.64 T
(uild tr) 325.26 526.64 T
(ees) 359.37 526.64 T
3 10 Q
-0.26 (It\325) 189 502.31 P
-0.26 (s often desirable to k) 197.89 502.31 P
-0.26 (eep an) 280.06 502.31 P
-0.26 (y deri) 305.47 502.31 P
-0.26 (v) 328.01 502.31 P
-0.26 (ed \336les from the b) 332.86 502.31 P
-0.26 (uild completely separate from the) 404.39 502.31 P
(source \336les. This mak) 189 490.31 T
(es it much easier to k) 276.67 490.31 T
(eep track of just what is a source \336le, and) 361.28 490.31 T
(also mak) 189 478.31 T
(es it simpler to handle) 224.73 478.31 T
2 F
(variant) 315.56 478.31 T
3 F
( b) 344.45 478.31 T
(uilds, especially if you w) 351.75 478.31 T
(ant the v) 451.92 478.31 T
(ariant b) 486.11 478.31 T
(uilds) 516.18 478.31 T
(to co-e) 189 466.31 T
(xist.) 216.34 466.31 T
0 9 Q
-0.04 (Separating b) 54 436.98 P
-0.04 (uild and sour) 108.29 436.98 P
-0.04 (ce) 164.53 436.98 P
(directories using the) 54 425.98 T
4 8 Q
(Link) 145.03 425.98 T
0 9 Q
(command) 54 414.98 T
3 10 Q
(Cons pro) 189 436.98 T
(vides a simple mechanism that handles all of these requirements. The) 225.24 436.98 T
4 8 Q
(Link) 505.2 436.98 T
3 10 Q
(command is in) 189 424.98 T
(v) 247.49 424.98 T
(ok) 252.29 424.98 T
(ed as in this e) 262.19 424.98 T
(xample:) 316.48 424.98 T
4 8 Q
(Link 'build' => 'src';) 144 394.64 T
3 10 Q
(The speci\336ed directories are \322link) 189 371.31 T
(ed\323 to the speci\336ed source directory) 324.42 371.31 T
(.) 467.9 371.31 T
3 8 Q
(1) 470.4 375.31 T
3 10 Q
( Let\325) 474.4 371.31 T
(s suppose) 493.01 371.31 T
(that you setup a source directory) 189 359.31 T
(,) 318.6 359.31 T
4 8 Q
(src) 323.6 359.31 T
3 10 Q
(, with the sub-directories) 338 359.31 T
4 8 Q
(world) 439.93 359.31 T
3 10 Q
( and) 463.93 359.31 T
4 8 Q
(hello) 483.37 359.31 T
3 10 Q
( belo) 507.37 359.31 T
(w) 526.84 359.31 T
(it, as in the pre) 189 347.31 T
(vious e) 247.91 347.31 T
(xample. Y) 276.37 347.31 T
(ou could then substitute for the original b) 316.93 347.31 T
(uild lines the) 482 347.31 T
(follo) 189 335.31 T
(wing:) 207.64 335.31 T
189 136.29 612 156.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 144.29 321 144.29 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
3 9 Q
0 X
0 0 0 1 0 0 0 K
(1.) 189 130.29 T
(More precisely) 201 130.29 T
(, the directories are link) 254.65 130.29 T
(ed to the source directory) 339.79 130.29 T
2 F
(associated) 433.52 130.29 T
3 F
( with the speci\336ed) 471.51 130.29 T
-0.22 (directory) 201 119.29 P
-0.22 (. Normally) 232.9 119.29 P
-0.22 (, this will be the directory itself. In some instances, ho) 271.1 119.29 P
-0.22 (we) 463.38 119.29 P
-0.22 (v) 473.65 119.29 P
-0.22 (er) 478.02 119.29 P
-0.22 (, it may be con-) 484.65 119.29 P
(v) 201 108.29 T
(enient to link to an already link) 205.37 108.29 T
(ed directory) 317.77 108.29 T
(. In that case, the associated source directory is) 360.42 108.29 T
(what counts.) 201 97.29 T
4 8 Q
(Build qw\050) 144 314.64 T
(build/world/Conscript) 198 304.64 T
(build/hello/Conscript) 198 294.64 T
(\051;) 144 284.64 T
3 10 Q
-0.19 (Notice that you treat the) 189 261.31 P
4 8 Q
-0.37 (Conscript) 287.2 261.31 P
3 10 Q
-0.19 ( \336le as if it e) 330.4 261.31 P
-0.19 (xisted in the b) 379.02 261.31 P
-0.19 (uild directory) 434.64 261.31 P
-0.19 (. No) 487.96 261.31 P
-0.19 (w if you) 504.74 261.31 P
(type the same command as before, you will get the follo) 189 249.31 T
(wing results:) 413.44 249.31 T
4 8 Q
(% cons export) 144 228.64 T
(Install build/world/world.h as export/include/world.h) 144 218.64 T
(cc -Iexport/include -c build/hello/hello.c -o build/hello/hello.o) 144 208.64 T
(cc -Iexport/include -c build/world/world.c -o build/world/world.o) 144 198.64 T
(ar r build/world/libworld.a build/world/world.o) 144 188.64 T
(ar: creating build/world/libworld.a) 144 178.64 T
(ranlib build/world/libworld.a) 144 168.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(V) 207 737.5 T
(ariant b) 211.86 737.5 T
(uilds) 240.59 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(11) 546 59.9 T
4 8 Q
(Install build/world/libworld.a as export/lib/libworld.a) 162 684.64 T
(cc -o build/hello/hello build/hello/hello.o -Lexport/lib -lworld) 162 674.64 T
(Install build/hello/hello as export/bin/hello) 162 664.64 T
3 10 Q
(Ag) 207 641.31 T
(ain, Cons has tak) 219.17 641.31 T
(en care of the details for you. In particular) 287.4 641.31 T
(, you will notice that all) 455.56 641.31 T
-0.21 (the b) 207 629.31 P
-0.21 (uilds are done using source \336les and object \336les from the b) 226.31 629.31 P
-0.21 (uild directory) 459.04 629.31 P
-0.21 (. F) 512.34 629.31 P
-0.21 (or e) 522.54 629.31 P
-0.21 (xam-) 537.45 629.31 P
(ple,) 207 617.31 T
4 8 Q
(build/world/world.o) 224.22 617.31 T
3 10 Q
( is compiled from) 315.42 617.31 T
4 8 Q
(build/world/world.c) 388.75 617.31 T
3 10 Q
(, and) 479.95 617.31 T
4 8 Q
(export/) 501.89 617.31 T
(include/world.h) 207 605.31 T
3 10 Q
( is installed from) 279 605.31 T
4 8 Q
(build/world/world.h) 349 605.31 T
3 10 Q
(. This is accomplished on) 440.2 605.31 T
(most systems by the simple e) 207 593.31 T
(xpedient of \322hard\323 linking the required \336les from each) 323.8 593.31 T
(source directory into the appropriate b) 207 581.31 T
(uild directory) 359.82 581.31 T
(.) 413.33 581.31 T
(The links are maintained correctly by Cons, no matter what you do to the source direc-) 207 557.31 T
(tory) 207 545.31 T
(. If you modify a source \336le, your editor may do this \322in place\323 or it may rename it) 222.46 545.31 T
(\336rst and create a ne) 207 533.31 T
(w \336le. In the latter case, an) 284.5 533.31 T
(y hard link will be lost. Cons will detect) 392.1 533.31 T
(this condition the ne) 207 521.31 T
(xt time the source \336le is needed, and will relink it appropriately) 288.24 521.31 T
(.) 541.45 521.31 T
(Y) 207 497.31 T
(ou\325) 213.12 497.31 T
(ll also notice, by the w) 226.35 497.31 T
(ay) 316.8 497.31 T
(, that) 325.59 497.31 T
2 F
(no) 348.09 497.31 T
3 F
( changes were required to the underlying) 358.09 497.31 T
4 8 Q
(Con-) 523.88 497.31 T
(script) 207 485.31 T
3 10 Q
( \336les. And we can go further) 235.8 485.31 T
(, as we shall see in the ne) 349.54 485.31 T
(xt section.) 450.48 485.31 T
207 428.98 558 431.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 431.13 558 431.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(V) 207 436.64 T
(ariant b) 214 436.64 T
(uilds) 258.45 436.64 T
5 9 Q
-0.66 (Hello, W) 72 402.98 P
-0.66 (orld!) 106.31 402.98 P
0 F
-0.66 ( f) 126.3 402.98 P
-0.66 (or baNaNa and) 130.96 402.98 P
(peAcH OS\325) 72 391.98 T
(s) 117.97 391.98 T
3 10 Q
(V) 207 402.98 T
(ariant b) 213.11 402.98 T
(uilds require just another simple e) 243.18 402.98 T
(xtension. Let\325) 378.85 402.98 T
(s tak) 433.85 402.98 T
(e as an e) 452.36 402.98 T
(xample a require-) 486.36 402.98 T
(ment to allo) 207 390.98 T
(w b) 254.53 390.98 T
(uilds for both the baNaNa and peAcH operating systems. In this case,) 269.05 390.98 T
(we are using a distrib) 207 378.98 T
(uted \336le system, such as NFS to access the particular system, and) 292.34 378.98 T
-0.37 (only one or the other of the systems has to be compiled for an) 207 366.98 P
-0.37 (y gi) 448.9 366.98 P
-0.37 (v) 463.55 366.98 P
-0.37 (en in) 468.4 366.98 P
-0.37 (v) 487.35 366.98 P
-0.37 (ocation of) 492.15 366.98 P
4 8 Q
-0.72 (cons) 534.17 366.98 P
3 10 Q
-0.37 (.) 553.37 366.98 P
(Here\325) 207 354.98 T
(s one w) 229.21 354.98 T
(ay we could set up the) 259.66 354.98 T
4 8 Q
(Construct) 351.31 354.98 T
3 10 Q
( \336le for our) 394.51 354.98 T
2 F
(Hello, W) 442.28 354.98 T
(orld!) 476.91 354.98 T
3 F
( application:) 496.91 354.98 T
4 8 Q
(# Construct file for Hello, World!) 162 334.31 T
(die qq\050OS must be specified\051 unless $OS = $ARG{OS};) 162 314.31 T
(die qq\050OS must be "peach" or "banana"\051) 162 304.31 T
(if $OS ne "peach" && $OS ne "banana";) 216 294.31 T
(# Where to put all our shared products.) 162 274.31 T
($EXPORT = "#export/$OS";) 162 264.31 T
(Export qw\050 CONS INCLUDE LIB BIN \051;) 162 244.31 T
(# Standard directories for sharing products.) 162 224.31 T
($INCLUDE = "$EXPORT/include";) 162 214.31 T
($LIB = "$EXPORT/lib";) 162 204.31 T
($BIN = "$EXPORT/bin";) 162 194.31 T
(# A standard construction environment.) 162 174.31 T
($CONS = new cons \050) 162 164.31 T
(CPPPATH => $INCLUDE,) 216 154.31 T
(# Include path for C Compilations) 342 154.31 T
(LIBPATH => $LIB) 216 144.31 T
(,) 288 144.31 T
(# Library path for linking programs) 342 144.31 T
(LIBS => '-lworld',) 216 134.31 T
(# List of standard libraries) 342 134.31 T
(\051;) 162 124.31 T
(# $BUILD is where we will derive everything.) 162 104.31 T
($BUILD = "#build/$OS";) 162 94.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Signatures) 189 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(12) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
4 8 Q
(# Tell cons where the source files for $BUILD are.) 144 684.64 T
(Link $BUILD => 'src';) 144 674.64 T
(Build \050) 144 654.64 T
("$BUILD/hello/Conscript",) 198 644.64 T
("$BUILD/world/Conscript",) 198 634.64 T
(\051;) 144 624.64 T
3 10 Q
-0.14 (No) 189 601.31 P
-0.14 (w if we login to a peAcH system, we can b) 200.97 601.31 P
-0.14 (uild our) 371.33 601.31 P
2 F
-0.14 (Hello, W) 404.95 601.31 P
-0.14 (orld!) 439.44 601.31 P
3 F
-0.14 ( application for that) 459.44 601.31 P
(platform:) 189 589.31 T
4 8 Q
(% cons export OS=peach) 144 568.64 T
(Install build/peach/world/world.h as export/peach/include/world.h) 144 558.64 T
(cc -Iexport/peach/include -c build/peach/hello/hello.c -o build/peach/hello/hello.o) 144 548.64 T
(cc -Iexport/peach/include -c build/peach/world/world.c -o build/peach/world/world.o) 144 538.64 T
(ar r build/peach/world/libworld.a build/peach/world/world.o) 144 528.64 T
(ar: creating build/peach/world/libworld.a) 144 518.64 T
(ranlib build/peach/world/libworld.a) 144 508.64 T
(Install build/peach/world/libworld.a as export/peach/lib/libworld.a) 144 498.64 T
(cc -o build/peach/hello/hello build/peach/hello/hello.o -Lexport/peach/lib -lworld) 144 488.64 T
(Install build/peach/hello/hello as export/peach/bin/hello) 144 478.64 T
0 9 Q
(V) 54 449.98 T
(ariations on a theme) 59.46 449.98 T
3 10 Q
(Other v) 189 449.98 T
(ariations of this model are possible. F) 219.02 449.98 T
(or e) 369.14 449.98 T
(xample, you might decide that you) 384.26 449.98 T
(w) 189 437.98 T
(ant to separate out your include \336les into platform dependent and platform indepen-) 196.12 437.98 T
(dent \336les. In this case, you\325) 189 425.98 T
(d ha) 298.21 425.98 T
(v) 314.95 425.98 T
(e to de\336ne an alternati) 319.8 425.98 T
(v) 408.42 425.98 T
(e to) 413.27 425.98 T
4 8 Q
($INCLUDE) 430.49 425.98 T
3 10 Q
( for platform-) 468.89 425.98 T
(dependent \336les. Most) 189 413.98 T
4 8 Q
(Conscript) 277.33 413.98 T
3 10 Q
( \336les, generating purely platform-independent include) 320.53 413.98 T
(\336les, w) 189 401.98 T
(ould not ha) 217.79 401.98 T
(v) 262.59 401.98 T
(e to change.) 267.44 401.98 T
(Y) 189 377.98 T
(ou might also w) 195.12 377.98 T
(ant to be able to compile your whole system with deb) 259.19 377.98 T
(ugging or pro\336l-) 472.86 377.98 T
(ing, for e) 189 365.98 T
(xample, enabled. Y) 225.23 365.98 T
(ou could do this with appropriate command line options,) 301.89 365.98 T
(such as) 189 353.98 T
4 8 Q
(DEBUG=on) 220.66 353.98 T
3 10 Q
(. This w) 259.06 353.98 T
(ould then be translated into the appropriate platform-speci\336c) 291.46 353.98 T
(requirements to enable deb) 189 341.98 T
(ugging \050this might include turning of) 296.83 341.98 T
(f optimization, for) 444.64 341.98 T
(e) 189 329.98 T
(xample\051. Y) 193.29 329.98 T
(ou could optionally v) 237.18 329.98 T
(ary the name space for these dif) 322.21 329.98 T
(ferent types of sys-) 449.14 329.98 T
(tems, b) 189 317.98 T
(ut, as we\325) 217.69 317.98 T
(ll see in the ne) 256.19 317.98 T
(xt section, it\325) 313.81 317.98 T
(s not) 365.76 317.98 T
2 F
(essential) 387.43 317.98 T
3 F
( to do this, since Cons is) 422.43 317.98 T
(pretty smart about reb) 189 305.98 T
(uilding things when you change options.) 276.84 305.98 T
189 249.64 540 252.64 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 251.8 540 251.8 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Signatur) 189 257.31 T
(es) 236.71 257.31 T
0 9 Q
(MD5 cr) 54 223.64 T
(yptographic) 84.1 223.64 T
(signatures) 54 212.64 T
3 10 Q
(Whene) 189 223.64 T
(v) 217.07 223.64 T
(er Cons creates a deri) 221.92 223.64 T
(v) 307.75 223.64 T
(ed \336le, it stores a) 312.6 223.64 T
2 F
(signatur) 383.15 223.64 T
(e) 416.12 223.64 T
3 F
( for that \336le. The signature is) 420.56 223.64 T
-0.33 (stored in a separate \336le, one per directory) 189 211.64 P
-0.33 (. After the pre) 351.53 211.64 P
-0.33 (vious e) 406.37 211.64 P
-0.33 (xample w) 434.5 211.64 P
-0.33 (as compiled, the) 473.23 211.64 P
4 8 Q
(.consign) 189 199.64 T
3 10 Q
( \336le in the) 227.4 199.64 T
4 8 Q
(build/peach/world) 270.18 199.64 T
3 10 Q
( directory look) 351.78 199.64 T
(ed lik) 410.56 199.64 T
(e this:) 432.96 199.64 T
4 8 Q
(world.o:834179303 23844c0b102ecdc0b4548d1cd1cbd8c6) 144 178.98 T
(libworld.a:834179304 9bf6587fa06ec49d864811a105222c00) 144 168.98 T
3 10 Q
(The \336rst number is a timestamp\321for a UNIX systems, this is typically the number of) 189 145.64 T
(seconds since January 1) 189 130.98 T
3 8 Q
(st) 284.81 134.98 T
3 10 Q
(, 1970. The second v) 290.15 130.98 T
(alue is an MD5 checksum. The) 373.22 130.98 T
2 F
(Messa) 500.14 130.98 T
(g) 525.59 130.98 T
(e) 530.49 130.98 T
(Dig) 189 118.98 T
(est Algorithm) 203.9 118.98 T
3 F
( is an algorithm that, gi) 258.07 118.98 T
(v) 350.6 118.98 T
(en an input string, computes a strong crypto-) 355.45 118.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Signatures) 207 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(13) 546 59.9 T
3 10 Q
(graphic signature for that string) 207 683.31 T
3 8 Q
(1) 333.09 687.31 T
3 10 Q
(. The MD5 checksum stored in the) 337.09 683.31 T
4 8 Q
(.consign) 478.18 683.31 T
3 10 Q
( \336le is, in) 516.58 683.31 T
-0.06 (ef) 207 671.31 P
-0.06 (fect, a digest of all the dependenc) 214.52 671.31 P
-0.06 (y information for the speci\336ed \336le. So, for e) 348.15 671.31 P
-0.06 (xample,) 523.62 671.31 P
-0.11 (for the \336le) 207 659.31 P
4 8 Q
-0.21 (world.o) 250.83 659.31 P
3 10 Q
-0.11 (, this includes at least the \336le) 284.43 659.31 P
4 8 Q
-0.21 (world.c) 402 659.31 P
3 10 Q
-0.11 (, and also an) 435.6 659.31 P
-0.11 (y header \336les that) 485.11 659.31 P
(Cons kno) 207 647.31 T
(ws about that are included, directly or indirectly by) 244.81 647.31 T
4 8 Q
(world.c) 452 647.31 T
3 10 Q
(.) 485.6 647.31 T
3 8 Q
(2) 488.1 651.31 T
3 10 Q
( Not only that,) 492.1 647.31 T
-0 (b) 207 635.31 P
-0 (ut the actual command line that w) 211.8 635.31 P
-0 (as used to generate) 347.23 635.31 P
4 8 Q
-0 (world.o) 425.53 635.31 P
3 10 Q
-0 ( is also fed into the com-) 459.13 635.31 P
(putation of the signature. Similarly) 207 623.31 T
(,) 346.07 623.31 T
4 8 Q
(libworld.a) 351.07 623.31 T
3 10 Q
( gets a signature which \322includes\323 all) 399.07 623.31 T
-0.2 (the signatures of its constituents \050and hence, transiti) 207 611.31 P
-0.2 (v) 412.57 611.31 P
-0.2 (ely) 417.42 611.31 P
-0.2 (, the signatures of) 428.99 611.31 P
2 F
-0.2 (their) 501.81 611.31 P
3 F
-0.2 ( constitu-) 520.7 611.31 P
(ents\051, as well as the command line that created the \336le.) 207 599.31 T
(The signature of a non-deri) 207 575.31 T
(v) 315.61 575.31 T
(ed \336le is computed, by def) 320.46 575.31 T
(ault, by taking the current modi-) 426.46 575.31 T
(\336cation time of the \336le and the \336le\325) 207 563.31 T
(s entry name \050unless there happens to be a current) 347.83 563.31 T
4 8 Q
(.consign) 207 551.31 T
3 10 Q
( entry for that \336le, in which case that signature is used\051.) 245.4 551.31 T
(Notice that there is no need for a deri) 207 527.31 T
(v) 355.6 527.31 T
(ed \336le to depend upon an) 360.45 527.31 T
(y particular) 461.12 527.31 T
4 8 Q
(Construct) 509.44 527.31 T
3 10 Q
(or) 207 515.31 T
4 8 Q
(Conscript) 217.83 515.31 T
3 10 Q
( \336le\321if changes to these \336les af) 261.03 515.31 T
(fect the \336le in question, then this will be) 389.65 515.31 T
(automatically re\337ected in its signature, since rele) 207 503.31 T
(v) 402.55 503.31 T
(ant parts of the command line are) 407.3 503.31 T
(included in the signature. Unrelated changes will ha) 207 491.31 T
(v) 414.54 491.31 T
(e no ef) 419.39 491.31 T
(fect.) 446.35 491.31 T
(When Cons considers whether to deri) 207 467.31 T
(v) 357 467.31 T
(e a particular \336le, then, it \336rst computes the) 361.85 467.31 T
(e) 207 455.31 T
(xpected signature of the \336le. It then compares the \336le\325) 211.29 455.31 T
(s last modi\336cation time with the) 426.81 455.31 T
(time recorded in the) 207 443.31 T
4 8 Q
(.consign) 289.76 443.31 T
3 10 Q
( entry) 328.16 443.31 T
(, if one e) 350.56 443.31 T
(xists. If these times match, then the signa-) 385.4 443.31 T
(ture stored in the) 207 431.31 T
4 8 Q
(.consign) 276.99 431.31 T
3 10 Q
( \336le is considered to be accurate. If the \336le\325) 315.39 431.31 T
(s pre) 488.13 431.31 T
(vious signa-) 507.04 431.31 T
(ture does not match the ne) 207 419.31 T
(w) 312.01 419.31 T
(, e) 318.58 419.31 T
(xpected signature, then the \336le must be rederi) 327.87 419.31 T
(v) 509.81 419.31 T
(ed.) 514.66 419.31 T
-0.31 (Notice that a \336le will be rederi) 207 395.31 P
-0.31 (v) 327.09 395.31 P
-0.31 (ed whene) 331.94 395.31 P
-0.31 (v) 369.42 395.31 P
-0.31 (er an) 374.27 395.31 P
-0.31 (ything about a dependent \336le changes. In) 393.52 395.31 P
(particular) 207 383.31 T
(, notice that) 244.92 383.31 T
2 F
(any) 294.36 383.31 T
3 F
( change to the modi\336cation time of a dependent \050forw) 308.8 383.31 T
(ard or) 523.94 383.31 T
(backw) 207 371.31 T
(ards in time\051 will force recompilation of the deri) 233 371.31 T
(v) 426.05 371.31 T
(ed \336le.) 430.9 371.31 T
(The use of these signatures is an e) 207 347.31 T
(xtremely simple, ef) 343.21 347.31 T
(\336cient, and ef) 420.45 347.31 T
(fecti) 474.91 347.31 T
(v) 492.43 347.31 T
(e method of) 497.28 347.31 T
(impro) 207 335.31 T
(ving\321dramatically\321the reproducibility of a system.) 230.74 335.31 T
(W) 207 311.31 T
(e\325) 215.64 311.31 T
(ll demonstrate this with a simple e) 223.31 311.31 T
(xample:) 360.38 311.31 T
207 172.29 612 192.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 180.29 339 180.29 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
3 9 Q
0 X
0 0 0 1 0 0 0 K
(1.) 207 166.29 T
(See RFC 1321.) 219 166.29 T
(2.) 207 152.29 T
-0.27 (W) 219 152.29 P
-0.27 (e hasten to point out that, by def) 226.78 152.29 P
-0.27 (ault, for C programs, standard include \336les are not depended) 340.77 152.29 P
(upon. Only those \336les that can be look) 219 141.29 T
(ed up on the v) 357.4 141.29 T
(ariable) 408.17 141.29 T
4 8 Q
(CPPPATH) 434.91 141.29 T
3 9 Q
( \050and hence e) 468.51 141.29 T
(xplicitly) 516.1 141.29 T
(speci\336ed with a) 219 130.29 T
4 8 Q
(-I) 277.74 130.29 T
3 9 Q
( option\051 will be noticed by Cons. This is reasonable, gi) 287.34 130.29 T
(v) 484.11 130.29 T
(en the relati) 488.48 130.29 T
(v) 530.74 130.29 T
(e sta-) 535.1 130.29 T
(bility of these \336les, and the f) 219 119.29 T
(act that the) 321.65 119.29 T
(y are also isolated \050the) 361.01 119.29 T
(y don\325) 441.86 119.29 T
(t attempt to include \336les) 464.94 119.29 T
-0.02 (pro) 219 108.29 P
-0.02 (vided by the user\051. If these assumptions don\325) 230.86 108.29 P
-0.02 (t match yours, then you should control the) 392.06 108.29 P
4 8 Q
-0.04 (-I) 546.17 108.29 P
3 9 Q
(path rigorously) 219 97.29 T
(, and mak) 273.16 97.29 T
(e sure that Cons sees e) 308.32 97.29 T
(xactly the same \336les as the compiler) 389.42 97.29 T
(.) 519.4 97.29 T
4 8 Q
(# Simple "Hello, World!" Construct file) 162 290.64 T
($CFLAGS = '-g' if $ARG{DEBUG} eq 'on';) 162 280.64 T
($CONS = new cons\050CFLAGS => $CFLAGS\051;) 162 270.64 T
(Program $CONS 'hello', 'hello.c';) 162 260.64 T
3 10 Q
(Notice ho) 207 237.31 T
(w Cons recompiles at the appropriate times:) 245.91 237.31 T
4 8 Q
(% cons hello) 162 216.64 T
(cc -c hello.c -o hello.o) 162 206.64 T
(cc -o hello hello.o) 162 196.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Selective b) 189 737.5 T
(uilds) 230.64 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(14) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
4 8 Q
(% cons hello) 144 684.64 T
(cons: "hello" is up-to-date.) 144 674.64 T
(% cons DEBUG=on hello) 144 664.64 T
(cc -g -c hello.c -o hello.o) 144 654.64 T
(cc -o hello hello.o) 144 644.64 T
(% cons DEBUG=on hello) 144 634.64 T
(cons: "hello" is up-to-date.) 144 624.64 T
(% cons hello) 144 614.64 T
(cc -c hello.c -o hello.o) 144 604.64 T
(cc -o hello hello.o) 144 594.64 T
189 538.98 540 541.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 541.13 540 541.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Selective b) 189 546.64 T
(uilds) 248.98 546.64 T
3 10 Q
(Cons pro) 189 518.31 T
(vides tw) 225.24 518.31 T
(o methods for reducing the size of gi) 258.75 518.31 T
(v) 405.42 518.31 T
(en b) 410.27 518.31 T
(uild. The \336rst is by specify-) 427.01 518.31 T
(ing tar) 189 506.31 T
(gets on the command line, and the second is a method for pruning the b) 214.65 506.31 T
(uild tree.) 500.25 506.31 T
(W) 189 494.31 T
(e\325) 197.64 494.31 T
(ll consider tar) 205.31 494.31 T
(get speci\336cation \336rst.) 260.12 494.31 T
0 9 Q
(Selective tar) 54 464.98 T
(g) 106.89 464.98 T
(eting) 112.48 464.98 T
3 10 Q
-0.38 (Lik) 189 464.98 P
-0.38 (e mak) 202.79 464.98 P
-0.38 (e, Cons allo) 226.47 464.98 P
-0.38 (ws the speci\336cation of \322tar) 272.95 464.98 P
-0.38 (gets\323 on the command line. Cons tar) 378.43 464.98 P
-0.38 (gets) 521.77 464.98 P
(may be either \336les or directories. When a directory is speci\336ed, this is simply a short-) 189 452.98 T
(hand notation for e) 189 440.98 T
(v) 264.57 440.98 T
(ery deri) 269.42 440.98 T
(v) 299.99 440.98 T
(able product\321that Cons kno) 304.74 440.98 T
(ws about\321in the speci\336ed) 419.76 440.98 T
(directory and belo) 189 428.98 T
(w) 261.51 428.98 T
(. F) 268.08 428.98 T
(or e) 278.49 428.98 T
(xample:) 293.61 428.98 T
4 8 Q
(cons build/hello/hello.o) 144 408.31 T
3 10 Q
(means b) 189 384.98 T
(uild) 221.85 384.98 T
4 8 Q
( hello.o) 237.41 384.98 T
3 10 Q
( and e) 275.81 384.98 T
(v) 299.44 384.98 T
(erything that) 304.29 384.98 T
4 8 Q
(hello.o) 357.62 384.98 T
3 10 Q
( might need. This is from a pre) 391.22 384.98 T
(vious) 514.29 384.98 T
(v) 189 372.98 T
(ersion of the) 193.85 372.98 T
2 F
(Hello, W) 246.34 372.98 T
(orld!) 280.97 372.98 T
3 F
(  program in which) 300.97 372.98 T
4 8 Q
(hello.o) 379.57 372.98 T
3 10 Q
( depended upon) 413.17 372.98 T
4 8 Q
(export/) 478.99 372.98 T
(include/world.h) 189 360.98 T
3 10 Q
(. If that \336le is not up-to-date \050because someone modi\336ed) 261 360.98 T
4 8 Q
(src/world/) 489.58 360.98 T
(world.h\051) 189 348.98 T
3 10 Q
(, then it will be reb) 227.4 348.98 T
(uilt, e) 302.75 348.98 T
(v) 325.28 348.98 T
(en though it is in a directory remote from) 330.13 348.98 T
4 8 Q
(build/) 497.61 348.98 T
(hello) 189 336.98 T
3 10 Q
(.) 213 336.98 T
(In this e) 189 312.98 T
(xample:) 221.07 312.98 T
4 8 Q
(cons build) 144 292.31 T
3 10 Q
-0.2 (Ev) 189 268.98 P
-0.2 (erything in the) 199.96 268.98 P
4 8 Q
-0.39 (build) 260.19 268.98 P
3 10 Q
-0.2 ( directory is b) 284.19 268.98 P
-0.2 (uilt, if necessary) 338.65 268.98 P
-0.2 (. Ag) 403.42 268.98 P
-0.2 (ain, this may cause more \336les) 420.39 268.98 P
(to be b) 189 256.98 T
(uilt. In particular) 216.02 256.98 T
(, both) 283.11 256.98 T
4 8 Q
(export/include/world.h) 308.39 256.98 T
3 10 Q
( and) 413.99 256.98 T
4 8 Q
(export/lib/libworld.a) 433.43 256.98 T
3 10 Q
(are required by the) 189 244.98 T
4 8 Q
(build/hello) 266.75 244.98 T
3 10 Q
( directory) 319.55 244.98 T
(, and so the) 357.5 244.98 T
(y will be b) 402.9 244.98 T
(uilt if the) 445.2 244.98 T
(y are out-of-) 481.72 244.98 T
(date.) 189 232.98 T
(If we do, instead:) 189 208.98 T
4 8 Q
(cons export) 144 188.31 T
3 10 Q
(then only the \336les that should be installed in the e) 189 164.98 T
(xport directory will be reb) 387.18 164.98 T
(uilt, if nec-) 491.96 164.98 T
(essary) 189 152.98 T
(, and then installed there. Note that) 213.34 152.98 T
4 8 Q
(cons build) 355.82 152.98 T
3 10 Q
( might b) 403.82 152.98 T
(uild \336les that) 436.96 152.98 T
4 8 Q
(cons) 491.69 152.98 T
(export) 189 140.98 T
3 10 Q
( doesn\325) 217.8 140.98 T
(t b) 246.78 140.98 T
(uild, and) 256.86 140.98 T
2 F
(vice-ver) 294.36 140.98 T
(sa) 326.46 140.98 T
3 F
(.) 335.35 140.98 T
0 9 Q
(No \322special\323 tar) 54 111.64 T
(g) 121.89 111.64 T
(ets) 127.48 111.64 T
3 10 Q
(W) 189 111.64 T
(ith Cons, mak) 198.04 111.64 T
(e-style \322special\323 tar) 253.78 111.64 T
(gets are not required. The simplest analog with) 332.46 111.64 T
(Cons is to use special) 189 99.64 T
4 8 Q
(export) 277.61 99.64 T
3 10 Q
( directories, instead. Let\325) 306.41 99.64 T
(s suppose, for e) 405.56 99.64 T
(xample, that you) 467.62 99.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Build Pruning) 207 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(15) 546 59.9 T
3 10 Q
(ha) 207 683.31 T
(v) 216.24 683.31 T
(e a whole series of unit tests that are associated with your code. The tests li) 221.09 683.31 T
(v) 520.79 683.31 T
(e in the) 525.64 683.31 T
(source directory near the code. Normally) 207 671.31 T
(, ho) 370.19 671.31 T
(we) 384.94 671.31 T
(v) 396.35 671.31 T
(er) 401.2 671.31 T
(, you don\325) 408.57 671.31 T
(t w) 449.22 671.31 T
(ant to b) 461.62 671.31 T
(uild these tests.) 491.42 671.31 T
(One solution is to pro) 207 659.31 T
(vide all the b) 293.52 659.31 T
(uild instructions for creating the tests, and then to) 345.26 659.31 T
(install the tests into a separate part of the tree. If we install the tests in a top-le) 207 647.31 T
(v) 518.37 647.31 T
(el direc-) 523.22 647.31 T
(tory called) 207 635.31 T
4 8 Q
(tests) 251.99 635.31 T
3 10 Q
(, then:) 275.99 635.31 T
4 8 Q
(cons tests) 162 614.64 T
3 10 Q
(will b) 207 591.31 T
(uild all the tests.) 229.86 591.31 T
4 8 Q
(cons export) 162 570.64 T
3 10 Q
(will b) 207 547.31 T
(uild the production v) 229.86 547.31 T
(ersion of the system \050b) 313.32 547.31 T
(ut not the tests\051, and:) 404.22 547.31 T
4 8 Q
(cons build) 162 526.64 T
3 10 Q
(should probably be a) 207 503.31 T
(v) 290.4 503.31 T
(oided \050since it will compile tests unecessarily\051.) 295.2 503.31 T
(If you w) 207 479.31 T
(ant to b) 240.78 479.31 T
(uild just a single test, then you could e) 270.58 479.31 T
(xplicitly name the test \050in either) 424.04 479.31 T
(the) 207 467.31 T
4 8 Q
(tests) 221.72 467.31 T
3 10 Q
( directory or the) 245.72 467.31 T
4 8 Q
(build) 312.37 467.31 T
3 10 Q
( directory\051. Y) 336.37 467.31 T
(ou could also aggre) 389.42 467.31 T
(g) 467.31 467.31 T
(ate the tests into a) 472.26 467.31 T
(con) 207 455.31 T
(v) 221.04 455.31 T
(enient hierarch) 225.89 455.31 T
(y within the tests directory) 285.54 455.31 T
(. This hierarch) 391.55 455.31 T
(y need not necessarily) 449.54 455.31 T
(match the source hierarch) 207 443.31 T
(y) 309.97 443.31 T
(, in much the same manner that the include hierarch) 314.32 443.31 T
(y proba-) 521.45 443.31 T
(bly doesn\325) 207 431.31 T
(t match the source hierarch) 248.76 431.31 T
(y \050the include hierarch) 357.01 431.31 T
(y is unlik) 447.21 431.31 T
(ely to be more) 484.34 431.31 T
(than tw) 207 419.31 T
(o le) 236.62 419.31 T
(v) 251.09 419.31 T
(els deep, for C programs\051.) 255.94 419.31 T
(If you w) 207 395.31 T
(ant to b) 240.78 395.31 T
(uild absolutely e) 270.58 395.31 T
(v) 336.44 395.31 T
(erything in the tree \050subject to whate) 341.29 395.31 T
(v) 487.68 395.31 T
(er options you) 492.53 395.31 T
(select\051, you can use:) 207 383.31 T
4 8 Q
(cons .) 162 362.64 T
3 10 Q
(This is not particularly ef) 207 339.31 T
(\336cient, since it will redundantly w) 307.85 339.31 T
(alk all the trees, including) 444.41 339.31 T
(the source tree. The source tree, of course, may ha) 207 327.31 T
(v) 407.84 327.31 T
(e b) 412.69 327.31 T
(uildable objects in it\321nothing) 424.43 327.31 T
(stops you from doing this, e) 207 315.31 T
(v) 318.42 315.31 T
(en if you normally b) 323.27 315.31 T
(uild in a separate b) 404.73 315.31 T
(uild tree.) 480.07 315.31 T
207 258.98 558 261.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 261.13 558 261.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Build Pruning) 207 266.64 T
3 10 Q
(In conjunction with tar) 207 242.31 T
(get selection,) 298.2 242.31 T
2 F
(b) 353.47 242.31 T
(uild pruning) 358.27 242.31 T
3 F
( can be used to reduce the scope of) 408 242.31 T
(the b) 207 230.31 T
(uild. In the pre) 226.52 230.31 T
(vious peAcH and baNaNa e) 285.15 230.31 T
(xample, we ha) 396.63 230.31 T
(v) 454.47 230.31 T
(e already seen ho) 459.32 230.31 T
(w) 528.21 230.31 T
-0.3 (script-dri) 207 218.31 P
-0.3 (v) 243.41 218.31 P
-0.3 (en b) 248.26 218.31 P
-0.3 (uild pruning can be used to mak) 264.7 218.31 P
-0.3 (e only half of the potential b) 391.1 218.31 P
-0.3 (uild a) 502.4 218.31 P
-0.3 (v) 524.39 218.31 P
-0.3 (ailable) 529.14 218.31 P
-0.2 (for an) 207 206.31 P
-0.2 (y gi) 230.25 206.31 P
-0.2 (v) 245.09 206.31 P
-0.2 (en in) 249.93 206.31 P
-0.2 (v) 269.06 206.31 P
-0.2 (ocation of) 273.86 206.31 P
4 8 Q
-0.38 (cons) 316.23 206.31 P
3 10 Q
-0.2 (. Cons also pro) 335.43 206.31 P
-0.2 (vides, as a con) 394.69 206.31 P
-0.2 (v) 452.02 206.31 P
-0.2 (enience, a command line) 456.87 206.31 P
(con) 207 194.31 T
(v) 221.04 194.31 T
(ention that allo) 225.89 194.31 T
(ws you to specify which) 285.64 194.31 T
4 8 Q
(Conscript) 385.35 194.31 T
3 10 Q
( \336les actually get \322b) 428.55 194.31 T
(uilt\323\321that) 508.34 194.31 T
(is, incorporated into the b) 207 182.31 T
(uild tree. F) 309.29 182.31 T
(or e) 352.75 182.31 T
(xample:) 367.87 182.31 T
4 8 Q
(cons build +world) 162 161.64 T
3 10 Q
-0.03 (The) 207 138.31 P
4 8 Q
-0.06 (+) 225.02 138.31 P
3 10 Q
-0.03 ( ar) 229.82 138.31 P
-0.03 (gument introduces a Perl re) 239.88 138.31 P
-0.03 (gular e) 349.58 138.31 P
-0.03 (xpression. This must, of course, be quoted at) 376.89 138.31 P
(the shell le) 207 126.31 T
(v) 250.08 126.31 T
(el if there are an) 254.93 126.31 T
(y shell meta-characters within the e) 319.75 126.31 T
(xpression. The e) 461.51 126.31 T
(xpres-) 527.18 126.31 T
-0.04 (sion is matched ag) 207 114.31 P
-0.04 (ainst each) 280.99 114.31 P
4 8 Q
-0.08 (Conscript) 323.12 114.31 P
3 10 Q
-0.04 ( \336le which has been mentioned in a) 366.32 114.31 P
4 8 Q
-0.08 (Build) 509.88 114.31 P
3 10 Q
-0.04 ( state-) 533.88 114.31 P
(ment, and only those scripts with matching names are actually incorporated into the) 207 102.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Bac) 189 737.5 T
(king b) 203.51 737.5 T
(uilds) 226.91 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(16) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
3 F
(b) 189 683.31 T
(uild tree. Multiple such ar) 193.8 683.31 T
(guments are allo) 297.22 683.31 T
(wed, in which case a match ag) 363.07 683.31 T
(ainst an) 484.93 683.31 T
(y of) 515.61 683.31 T
(them is suf) 189 671.31 T
(\336cient to cause a script to be included.) 232.64 671.31 T
(In the e) 189 647.31 T
(xample, abo) 218.84 647.31 T
(v) 267.57 647.31 T
(e, the) 272.42 647.31 T
4 8 Q
(hello) 296.58 647.31 T
3 10 Q
( program will not be b) 320.58 647.31 T
(uilt, since Cons will ha) 409.54 647.31 T
(v) 501.29 647.31 T
(e no) 506.14 647.31 T
(kno) 189 635.31 T
(wledge of the script) 203.75 635.31 T
4 8 Q
(hello/Conscript) 285.4 635.31 T
3 10 Q
(. The) 357.4 635.31 T
4 8 Q
(libworld.a) 380.45 635.31 T
3 10 Q
( archi) 428.45 635.31 T
(v) 450.69 635.31 T
(e will be b) 455.54 635.31 T
(uilt, ho) 497.28 635.31 T
(w-) 525.37 635.31 T
(e) 189 623.31 T
(v) 193.19 623.31 T
(er) 198.04 623.31 T
(, if need be.) 205.41 623.31 T
(There are a couple of uses for b) 189 599.31 T
(uild pruning via the command line. Perhaps the most) 315.14 599.31 T
(useful is the ability to mak) 189 587.31 T
(e local changes, and then, with suf) 295.29 587.31 T
(\336cient kno) 432.79 587.31 T
(wledge of the) 475.04 587.31 T
-0.22 (consequences of those changes, restrict the size of the b) 189 575.31 P
-0.22 (uild tree in order to speed up the) 409.55 575.31 P
(reb) 189 563.31 T
(uild time. A second use for b) 201.57 563.31 T
(uild pruning is to acti) 317.19 563.31 T
(v) 402.5 563.31 T
(ely pre) 407.35 563.31 T
(v) 434.59 563.31 T
(ent the recompilation of) 439.44 563.31 T
(certain \336les that you kno) 189 551.31 T
(w will recompile due to, for e) 287.63 551.31 T
(xample, a modi\336ed header \336le.) 406.07 551.31 T
(Y) 189 539.31 T
(ou may kno) 195.12 539.31 T
(w that either the changes to the header \336le are immaterial, or that the) 242.09 539.31 T
(changes may be safely ignored for most of the tree, for testing purposes.) 189 527.31 T
-0.18 (W) 189 503.31 P
-0.18 (ith Cons, the vie) 198.04 503.31 P
-0.18 (w is that it is pragmatic to admit this type of beha) 262.82 503.31 P
-0.18 (vior) 458.72 503.31 P
-0.18 (, with the under-) 474.43 503.31 P
(standing that on the ne) 189 491.31 T
(xt full b) 279.4 491.31 T
(uild e) 310.87 491.31 T
(v) 333.12 491.31 T
(erything that needs to be reb) 337.97 491.31 T
(uilt will be. There is) 451.36 491.31 T
(no equi) 189 479.31 T
(v) 218.47 479.31 T
(alent to a \322mak) 223.22 479.31 T
(e touch\323 command, to mark \336les as permanently up-to-date. So) 283.94 479.31 T
(an) 189 467.31 T
(y risk that is incurred by b) 198.29 467.31 T
(uild pruning is mitig) 303.08 467.31 T
(ated. F) 384.99 467.31 T
(or release quality w) 412.06 467.31 T
(ork, ob) 490.55 467.31 T
(vi-) 518.73 467.31 T
-0.11 (ously) 189 455.31 P
-0.11 (, we recommend that you do not use b) 210.02 455.31 P
-0.11 (uild pruning \050it\325) 361.43 455.31 P
-0.11 (s perfectly OK to use during) 424.56 455.31 P
-0.02 (inte) 189 443.31 P
-0.02 (gration, ho) 203.85 443.31 P
-0.02 (we) 246.91 443.31 P
-0.02 (v) 258.32 443.31 P
-0.02 (er) 263.17 443.31 P
-0.02 (, for checking compilation, etc. Just be sure to do an unconstrained) 270.54 443.31 P
(b) 189 431.31 T
(uild before committing the inte) 193.8 431.31 T
(gration\051.) 318.09 431.31 T
189 374.98 540 377.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 377.13 540 377.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Bac) 189 382.64 T
(king b) 210.49 382.64 T
(uilds) 244.82 382.64 T
3 10 Q
(T) 189 358.31 T
(.B.S.) 194.37 358.31 T
189 301.98 540 304.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 304.13 540 304.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(T) 189 309.64 T
(empor) 195.5 309.64 T
(ary o) 231.06 309.64 T
(verrides) 260.08 309.64 T
3 10 Q
-0.4 (Cons pro) 189 285.31 P
-0.4 (vides a v) 224.85 285.31 P
-0.4 (ery simple mechanism for o) 259.46 285.31 P
-0.4 (v) 369.38 285.31 P
-0.4 (erriding aspects of a b) 374.23 285.31 P
-0.4 (uild. The essence is) 460.76 285.31 P
(that you write an o) 189 273.31 T
(v) 263.84 273.31 T
(erride \336le containing one or more) 268.69 273.31 T
4 8 Q
(Override) 405.33 273.31 T
3 10 Q
( commands, and you) 443.73 273.31 T
(specify this on the command line, when you run) 189 261.31 T
4 8 Q
(cons) 383.98 261.31 T
3 10 Q
(:) 403.18 261.31 T
4 8 Q
(cons -o over export) 144 240.64 T
3 10 Q
(will b) 189 217.31 T
(uild the) 211.86 217.31 T
4 8 Q
(export) 244.64 217.31 T
3 10 Q
( directory) 273.44 217.31 T
(, with all deri) 311.39 217.31 T
(v) 364.47 217.31 T
(ed \336les subject to the o) 369.32 217.31 T
(v) 461.11 217.31 T
(errides present in) 465.96 217.31 T
(the \336le) 189 205.31 T
4 8 Q
(over) 219 205.31 T
3 10 Q
(. If you lea) 237.65 205.31 T
(v) 280.77 205.31 T
(e out the) 285.62 205.31 T
4 8 Q
(-o) 322.56 205.31 T
3 10 Q
( option, then e) 332.16 205.31 T
(v) 389.13 205.31 T
(erything necessary to remo) 393.98 205.31 T
(v) 501.86 205.31 T
(e all) 506.71 205.31 T
(o) 189 193.31 T
(v) 193.85 193.31 T
(errides will be reb) 198.7 193.31 T
(uilt.) 270.98 193.31 T
0 9 Q
(Overriding en) 54 163.98 T
(vir) 112.16 163.98 T
(onment) 122.99 163.98 T
(v) 54 152.98 T
(ariab) 58.82 152.98 T
(les) 80.24 152.98 T
3 10 Q
(The o) 189 163.98 T
(v) 211.9 163.98 T
(erride \336le can contain tw) 216.75 163.98 T
(o types of o) 316.07 163.98 T
(v) 362.86 163.98 T
(errides. The \336rst is incoming en) 367.71 163.98 T
(vironment) 494.52 163.98 T
(v) 189 151.98 T
(ariables. These are normally accessible by the) 193.75 151.98 T
4 8 Q
(Construct) 379.81 151.98 T
3 10 Q
( \336le from the) 423.01 151.98 T
4 8 Q
(%ENV) 477.45 151.98 T
3 10 Q
( hash v) 496.65 151.98 T
(ari-) 524.73 151.98 T
-0 (able. These can tri) 189 139.98 P
-0 (vially be o) 262.06 139.98 P
-0 (v) 304.12 139.98 P
-0 (erridden in the o) 308.97 139.98 P
-0 (v) 374.64 139.98 P
-0 (erride \336le by setting the appropriate ele-) 379.49 139.98 P
(ments of) 189 127.98 T
4 8 Q
(%ENV) 226.22 127.98 T
3 10 Q
( \050these could also be o) 245.42 127.98 T
(v) 334.42 127.98 T
(erridden in the user\325) 339.27 127.98 T
(s en) 419.53 127.98 T
(vironment, of course\051.) 434.96 127.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(T) 207 737.5 T
(emporar) 211.41 737.5 T
(y o) 243.5 737.5 T
(verrides) 254.9 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(17) 546 59.9 T
0 9 Q
(The) 72 683.31 T
4 8 Q
( Override) 88 683.31 T
0 9 Q
(command) 137.2 683.31 T
3 10 Q
-0.12 (The second type of o) 207 683.31 P
-0.12 (v) 290.26 683.31 P
-0.12 (erride is accomplished with the) 295.11 683.31 P
4 8 Q
-0.22 (Override) 422.01 683.31 P
3 10 Q
-0.12 ( command, which looks) 460.41 683.31 P
(lik) 207 671.31 T
(e this:) 217.46 671.31 T
4 8 Q
(Override <regexp>, <var1> => <value1>, <var2> => <value2>, ...;) 162 650.64 T
3 10 Q
(The re) 207 627.31 T
(gular e) 232.67 627.31 T
(xpression) 260.01 627.31 T
4 8 Q
(<regexp>) 300.84 627.31 T
3 10 Q
( is matched ag) 339.24 627.31 T
(ainst e) 396.68 627.31 T
(v) 422.26 627.31 T
(ery deri) 427.11 627.31 T
(v) 457.68 627.31 T
(ed \336le that is a candi-) 462.53 627.31 T
(date for the b) 207 615.31 T
(uild. If the deri) 259.84 615.31 T
(v) 319.58 615.31 T
(ed \336le matches, then the v) 324.43 615.31 T
(ariable/v) 428.61 615.31 T
(alue pairs are used to) 463.35 615.31 T
(o) 207 603.31 T
(v) 211.85 603.31 T
(erride the v) 216.7 603.31 T
(alues in the construction en) 261.99 603.31 T
(vironment associated with the deri) 371.02 603.31 T
(v) 508.53 603.31 T
(ed \336le.) 513.38 603.31 T
(Let\325) 207 579.31 T
(s suppose that we ha) 223.11 579.31 T
(v) 305.12 579.31 T
(e a construction en) 309.97 579.31 T
(vironment lik) 384.83 579.31 T
(e this:) 438.9 579.31 T
4 8 Q
($CONS = new cons\050) 162 558.64 T
(COPT => '',) 216 548.64 T
(CDBG => '-g',) 216 538.64 T
(CFLAGS => '%COPT %CDBG',) 216 528.64 T
(\051;) 162 518.64 T
3 10 Q
(Then if we ha) 207 502.31 T
(v) 262.06 502.31 T
(e an o) 266.91 502.31 T
(v) 290.64 502.31 T
(erride \336le) 295.49 502.31 T
4 8 Q
(over) 336.59 502.31 T
3 10 Q
( containing this command:) 355.79 502.31 T
4 8 Q
(Override '\134.o$', COPT => '-O', CDBG => '';) 162 481.64 T
3 10 Q
(then an) 207 458.31 T
(y) 236.01 458.31 T
4 8 Q
(cons) 243.51 458.31 T
3 10 Q
( in) 262.71 458.31 T
(v) 272.59 458.31 T
(ocation with) 277.39 458.31 T
4 8 Q
(-o over) 329.61 458.31 T
3 10 Q
( that creates) 363.21 458.31 T
4 8 Q
(.o) 413.47 458.31 T
3 10 Q
( \336les via this en) 423.07 458.31 T
(vironment will) 485.45 458.31 T
(cause them to be compiled with) 207 446.31 T
4 8 Q
(-O) 336.43 446.31 T
3 10 Q
(and no) 350.83 446.31 T
4 8 Q
(-g) 380.27 446.31 T
3 10 Q
(. The o) 389.87 446.31 T
(v) 417.77 446.31 T
(erride could, of course, be) 422.62 446.31 T
(restricted to a single directory by the appropriate selection of a re) 207 434.31 T
(gular e) 467.62 434.31 T
(xpression.) 494.96 434.31 T
(Here\325) 207 410.31 T
(s the original v) 229.21 410.31 T
(ersion of the Hello, W) 288.78 410.31 T
(orld! program, b) 377.13 410.31 T
(uilt with this en) 442.75 410.31 T
(vironment.) 504.86 410.31 T
-0.01 (Note that Cons reb) 207 398.31 P
-0.01 (uilds the appropriate pieces when the o) 282.05 398.31 P
-0.01 (v) 437.94 398.31 P
-0.01 (erride is applied or remo) 442.79 398.31 P
-0.01 (v) 540.93 398.31 P
-0.01 (ed:) 545.78 398.31 P
4 8 Q
(% cons hello) 162 377.64 T
(cc -g -c hello.c -o hello.o) 162 367.64 T
(cc -o hello hello.o) 162 357.64 T
(% cons -o over hello) 162 347.64 T
(cc -O -c hello.c -o hello.o) 162 337.64 T
(cc -o hello hello.o) 162 327.64 T
(% cons -o over hello) 162 317.64 T
(cons: "hello" is up-to-date.) 162 307.64 T
(% cons hello) 162 297.64 T
(cc -g -c hello.c -o hello.o) 162 287.64 T
(cc -o hello hello.o) 162 277.64 T
3 10 Q
(It\325) 207 254.31 T
(s important that the) 215.89 254.31 T
4 8 Q
(Override) 295.89 254.31 T
3 10 Q
( command only be used for temporary) 334.29 254.31 T
(, on-the-\337y o) 486.39 254.31 T
(v) 538.18 254.31 T
(er-) 543.03 254.31 T
-0.31 (rides necessary for de) 207 242.31 P
-0.31 (v) 292.72 242.31 P
-0.31 (elopment because the o) 297.57 242.31 P
-0.31 (v) 390.07 242.31 P
-0.31 (errides are not platform independent and) 394.92 242.31 P
(because the) 207 230.31 T
(y rely too much on intimate kno) 253.22 230.31 T
(wledge of the w) 381.3 230.31 T
(orkings of the scripts. F) 445.35 230.31 T
(or) 539.92 230.31 T
(temporary use, ho) 207 218.31 T
(we) 278.68 218.31 T
(v) 290.09 218.31 T
(er) 294.94 218.31 T
(,) 302.31 218.31 T
(the) 307.31 218.31 T
(y are e) 319.38 218.31 T
(xactly what you w) 345.88 218.31 T
(ant.) 419.38 218.31 T
-0.35 (Note that it is still useful to pro) 207 194.31 P
-0.35 (vide, say) 329.11 194.31 P
-0.35 (, the ability to create a fully optimized v) 363.65 194.31 P
-0.35 (ersion of) 520.94 194.31 P
(a system for production use\321from the) 207 182.31 T
4 8 Q
(Construct) 364.2 182.31 T
3 10 Q
( and) 407.4 182.31 T
4 8 Q
(Conscript) 426.84 182.31 T
3 10 Q
( \336les. This w) 470.04 182.31 T
(ay you) 521.61 182.31 T
(can tailor the optimized system to the platform. Where optimizer trade-of) 207 170.31 T
(fs need to be) 500.31 170.31 T
(made \050particular \336les may not be compiled with full optimization, for e) 207 158.31 T
(xample\051, then) 491.82 158.31 T
(these can be recorded for posterity \050and reproducibility\051 directly in the scripts.) 207 146.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(More on construction en) 189 737.5 T
(vir) 282.02 737.5 T
(onments: Default construction v) 291.65 737.5 T
(ariab) 414.17 737.5 T
(les) 433.21 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(18) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
2 14 Q
(Mor) 189 680.64 T
(e on construction en) 212.59 680.64 T
(vir) 325.96 680.64 T
(onments:) 340.89 680.64 T
189 656.98 540 659.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 659.13 540 659.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Default construction variables) 189 664.64 T
3 10 Q
-0.35 (W) 189 640.31 P
-0.35 (e ha) 197.64 640.31 P
-0.35 (v) 213.47 640.31 P
-0.35 (e mentioned, and used, the concept of a) 218.32 640.31 P
2 F
-0.35 (construction en) 376.07 640.31 P
-0.35 (vir) 437.27 640.31 P
-0.35 (onment) 447.93 640.31 P
3 F
-0.35 (, man) 477.37 640.31 P
-0.35 (y times in) 499.09 640.31 P
(the preceding pages. No) 189 628.31 T
(w it\325) 285.39 628.31 T
(s time to mak) 303.45 628.31 T
(e this a little more concrete. W) 357.52 628.31 T
(ith the follo) 480.15 628.31 T
(w-) 526.57 628.31 T
(ing statement:) 189 616.31 T
4 8 Q
($env = new cons\050\051;) 144 595.64 T
0 9 Q
(Default construction) 54 566.98 T
(v) 54 555.98 T
(ariab) 58.82 555.98 T
(les) 80.24 555.98 T
3 10 Q
(a reference to a ne) 189 566.98 T
(w) 262.04 566.98 T
(, def) 268.61 566.98 T
(ault construction en) 286.28 566.98 T
(vironment is created. This contains a num-) 364.76 566.98 T
(ber of construction v) 189 554.98 T
(ariables and some methods. At the present writing, the def) 271.79 554.98 T
(ault list) 504.71 554.98 T
(of construction v) 189 542.98 T
(ariables is de\336ned as follo) 256.52 542.98 T
(ws) 360.7 542.98 T
3 8 Q
(1) 371.81 546.98 T
3 10 Q
(:) 375.81 542.98 T
189 114.29 612 134.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 122.29 321 122.29 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
3 9 Q
0 X
0 0 0 1 0 0 0 K
(1.) 189 108.29 T
(This is for a typical UNIX system. F) 201 108.29 T
(or other systems, such as W) 332.36 108.29 T
(indo) 432.48 108.29 T
(ws/NT) 448.26 108.29 T
(, there may be) 472.09 108.29 T
(small dif) 201 97.29 T
(ferences.) 232.53 97.29 T
4 8 Q
(CC) 144 522.31 T
(=> 'cc',) 198 522.31 T
(CFLAGS) 144 512.31 T
(=> '',) 198 512.31 T
(CCCOM) 144 502.31 T
(=> '%CC %CFLAGS %_IFLAGS -c %< -o %>',) 198 502.31 T
(CPPPATH) 144 492.31 T
(=> '',) 198 492.31 T
(LINK) 144 482.31 T
(=> '%CC',) 198 482.31 T
(LINKCOM) 144 472.31 T
(=> '%LINK %LDFLAGS -o %> %< %_LDIRS %LIBS',) 198 472.31 T
(LIBPATH) 144 462.31 T
(=> '',) 198 462.31 T
(LIBS) 144 452.31 T
(=> '',) 198 452.31 T
(AR) 144 442.31 T
(=> 'ar',) 198 442.31 T
(ARCOM) 144 432.31 T
(=> "%AR %ARFLAGS %> %<\134n%RANLIB %>",) 198 432.31 T
(ARFLAGS) 144 422.31 T
(=> 'r',) 198 422.31 T
(RANLIB) 144 412.31 T
(=> 'ranlib',) 198 412.31 T
(AS) 144 402.31 T
(=> 'as',) 198 402.31 T
(ASFLAGS) 144 392.31 T
(=> '',) 198 392.31 T
(ASCOM) 144 382.31 T
(=> '%AS %ASFLAGS %< -o %>',) 198 382.31 T
(LD) 144 372.31 T
(=> 'ld',) 198 372.31 T
(LDFLAGS) 144 362.31 T
(=> '',) 198 362.31 T
(SUFLIB) 144 352.31 T
(=> '.a',) 198 352.31 T
(SUFOBJ) 144 342.31 T
(=> '.o',) 198 342.31 T
(ENV) 144 332.31 T
(=> { PATH => '/bin:/usr/bin' },) 198 332.31 T
3 10 Q
(These v) 189 308.98 T
(ariables are used by the v) 220.13 308.98 T
(arious methods associated with the en) 321.24 308.98 T
(vironment, in) 472.21 308.98 T
-0.25 (particular an) 189 296.98 P
-0.25 (y method that ultimately in) 238.86 296.98 P
-0.25 (v) 345.81 296.98 P
-0.25 (ok) 350.61 296.98 P
-0.25 (es an e) 360.51 296.98 P
-0.25 (xternal command will substitute these) 387.08 296.98 P
(v) 189 284.98 T
(ariables into the \336nal command, as appropriate. F) 193.75 284.98 T
(or e) 391.63 284.98 T
(xample, the) 406.75 284.98 T
4 8 Q
(Objects) 455.91 284.98 T
3 10 Q
( method) 489.51 284.98 T
(tak) 189 272.98 T
(es a number of source \336les and arranges to deri) 201.12 272.98 T
(v) 389.43 272.98 T
(e, if necessary) 394.28 272.98 T
(, the corresponding) 450.55 272.98 T
(object \336les. F) 189 260.98 T
(or e) 243.02 260.98 T
(xample:) 258.14 260.98 T
4 8 Q
(Objects $env 'foo.c', 'bar.c';) 144 240.31 T
3 10 Q
(This will arrange to produce, if necessary) 189 216.98 T
(,) 354.14 216.98 T
4 8 Q
(foo.o) 359.14 216.98 T
3 10 Q
( and) 383.14 216.98 T
4 8 Q
(bar.o) 402.58 216.98 T
3 10 Q
(. The command in) 426.58 216.98 T
(v) 498.95 216.98 T
(ok) 503.75 216.98 T
(ed is) 513.65 216.98 T
-0.46 (simply) 189 204.98 P
4 8 Q
-0.89 (%CCOM) 218.27 204.98 P
3 10 Q
-0.46 (, which e) 242.27 204.98 P
-0.46 (xpands) 277.57 204.98 P
-0.46 (through substitution, to the appropriate e) 308.4 204.98 P
-0.46 (xternal command) 468.71 204.98 P
(required to b) 189 192.98 T
(uild each object. W) 239.9 192.98 T
(e will e) 316.86 192.98 T
(xplore the substitution rules further under the) 346.15 192.98 T
4 8 Q
(Command) 189 180.98 T
3 10 Q
( method, belo) 222.6 180.98 T
(w) 277.07 180.98 T
(.) 283.64 180.98 T
(The construction v) 189 156.98 T
(ariables are also used for other purposes. F) 263.74 156.98 T
(or e) 434.66 156.98 T
(xample,) 449.78 156.98 T
4 8 Q
(CPPPATH) 484.22 156.98 T
3 10 Q
( is) 517.82 156.98 T
(used to specify a colon-separated path of include directories. These are intended to be) 189 144.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 18
%%Page: "19" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Default construction methods) 207 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(19) 546 59.9 T
3 10 Q
(passed to the C preprocessor and are also used by the C-\336le scanning machinery to) 207 683.31 T
(determine the dependencies in) 207 671.31 T
(v) 327.96 671.31 T
(olv) 332.76 671.31 T
(ed in a C Compilation. V) 345.39 671.31 T
(ariables be) 444.84 671.31 T
(ginning with) 487.73 671.31 T
(underscore, are created by v) 207 659.31 T
(arious methods, and should normally be considered \322inter-) 319.2 659.31 T
(nal\323 v) 207 647.31 T
(ariables. F) 230.91 647.31 T
(or e) 272.42 647.31 T
(xample, when a method is called which calls for the creation of an) 287.54 647.31 T
(object from a C source, the v) 207 635.31 T
(ariable) 322.56 635.31 T
4 8 Q
(_IFLAGS) 352.27 635.31 T
3 10 Q
( is created: this corresponds to the) 385.87 635.31 T
4 8 Q
(-I) 524.46 635.31 T
3 10 Q
(switches required by the C compiler to represent the directories speci\336ed by) 207 623.31 T
4 8 Q
(CPPPATH) 513.61 623.31 T
3 10 Q
(.) 547.21 623.31 T
(Note that, for an) 207 599.31 T
(y particular en) 272.39 599.31 T
(vironment, the v) 329.75 599.31 T
(alue of a v) 395.33 599.31 T
(ariable is set once, and then) 437.01 599.31 T
(ne) 207 587.31 T
(v) 216.19 587.31 T
(er reset \050to change a v) 221.04 587.31 T
(ariable, you must create a ne) 308.81 587.31 T
(w en) 422.97 587.31 T
(vironment. Methods are pro-) 441.73 587.31 T
-0.35 (vided for cop) 207 575.31 P
-0.35 (ying e) 259.52 575.31 P
-0.35 (xisting en) 283.75 575.31 P
-0.35 (vironments for this purpose\051. Some internal v) 322.17 575.31 P
-0.35 (ariables, such) 501.77 575.31 P
(as) 207 563.31 T
4 8 Q
(_IFLAGS) 217.83 563.31 T
3 10 Q
( are created on demand, b) 251.43 563.31 T
(ut once set, the) 353.97 563.31 T
(y remain \336x) 413.81 563.31 T
(ed for the life of the) 461.99 563.31 T
(en) 207 551.31 T
(vironment.) 216.04 551.31 T
-0.32 (Another v) 207 527.31 P
-0.32 (ariable,) 246.7 527.31 P
4 8 Q
-0.62 (ENV) 278.59 527.31 P
3 10 Q
-0.32 (, is used to determine the system en) 291.7 527.31 P
-0.32 (vironment during the e) 431.26 527.31 P
-0.32 (x) 521.53 527.31 P
-0.32 (ecution) 526.38 527.31 P
(of an e) 207 515.31 T
(xternal command. By def) 234.06 515.31 T
(ault, the only en) 335.61 515.31 T
(vironment v) 399.65 515.31 T
(ariable that is set is) 448.01 515.31 T
4 8 Q
(PATH) 527.17 515.31 T
3 10 Q
(,) 546.37 515.31 T
(which is the e) 207 503.31 T
(x) 262.12 503.31 T
(ecution path for a UNIX command. F) 266.97 503.31 T
(or the utmost reproducibility) 417.07 503.31 T
(, you) 531.14 503.31 T
(should really arrange to set your o) 207 491.31 T
(wn e) 343.39 491.31 T
(x) 362.4 491.31 T
(ecution path, in your top-le) 367.25 491.31 T
(v) 475.6 491.31 T
(el) 480.45 491.31 T
4 8 Q
(Construct) 490.17 491.31 T
3 10 Q
( \336le) 533.37 491.31 T
(\050or perhaps by importing an appropriate construction package with the Perl) 207 479.31 T
4 8 Q
(use) 510 479.31 T
3 10 Q
( com-) 524.4 479.31 T
(mand\051. The def) 207 467.31 T
(ault v) 268.27 467.31 T
(ariables are intended to get you of) 290.52 467.31 T
(f the ground.) 426.35 467.31 T
207 410.98 558 413.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 413.13 558 413.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Default construction methods) 207 418.64 T
3 10 Q
(The list of def) 207 390.31 T
(ault construction methods includes the follo) 263.28 390.31 T
(wing:) 438.3 390.31 T
0 9 Q
(The) 72 360.98 T
4 8 Q
(new) 90.5 360.98 T
0 9 Q
( constructor) 104.9 360.98 T
3 10 Q
(The) 207 360.98 T
4 8 Q
(new) 225.05 360.98 T
3 10 Q
( method is a Perl object constructor) 239.45 360.98 T
(. That is, it is not in) 380.55 360.98 T
(v) 457.94 360.98 T
(ok) 462.74 360.98 T
(ed via a reference to) 472.64 360.98 T
(an e) 207 348.98 T
(xisting construction en) 223.23 348.98 T
(vironment) 313.94 348.98 T
2 F
(r) 357.55 348.98 T
(efer) 361.07 348.98 T
(ence) 376.25 348.98 T
3 F
(, b) 394.57 348.98 T
(ut, rather statically) 404.37 348.98 T
(, using the name of) 478.43 348.98 T
(the Perl) 207 336.98 T
2 F
(pac) 240.33 336.98 T
(ka) 254.57 336.98 T
(g) 263.91 336.98 T
(e) 268.81 336.98 T
3 F
( where the constructor is de\336ned. The method is in) 273.25 336.98 T
(v) 475.6 336.98 T
(ok) 480.4 336.98 T
(ed lik) 490.3 336.98 T
(e this:) 512.7 336.98 T
4 8 Q
($env = new cons\050<overrides>\051;) 162 316.31 T
3 10 Q
-0.33 (The en) 207 292.98 P
-0.33 (vironment you get back is blessed into the package) 233.76 292.98 P
4 8 Q
-0.63 (cons) 437.16 292.98 P
3 10 Q
-0.33 (, which means that it will) 456.36 292.98 P
(ha) 207 280.98 T
(v) 216.24 280.98 T
(e associated with it the def) 221.09 280.98 T
(ault methods described belo) 327.36 280.98 T
(w) 439.04 280.98 T
(. Indi) 445.61 280.98 T
(vidual construction) 466.47 280.98 T
(v) 207 268.98 T
(ariables can be o) 211.75 268.98 T
(v) 278.52 268.98 T
(erridden by pro) 283.37 268.98 T
(viding name/v) 344.87 268.98 T
(alue pairs in an o) 402.12 268.98 T
(v) 470.29 268.98 T
(erride list. Note that) 475.14 268.98 T
-0.05 (to o) 207 256.98 P
-0.05 (v) 222.08 256.98 P
-0.05 (erride an) 226.93 256.98 P
-0.05 (y command en) 261.99 256.98 P
-0.05 (vironment v) 320.38 256.98 P
-0.05 (ariable \050i.e. an) 368.69 256.98 P
-0.05 (ything under) 425.64 256.98 P
4 8 Q
-0.09 (ENV) 478.87 256.98 P
3 10 Q
-0.05 (\051, you will ha) 493.27 256.98 P
-0.05 (v) 546.26 256.98 P
-0.05 (e) 551.11 256.98 P
(to o) 207 244.98 T
(v) 222.13 244.98 T
(erride all of them. Y) 226.98 244.98 T
(ou can get around this dif) 307.25 244.98 T
(\336culty by using the) 408.93 244.98 T
4 8 Q
(copy) 488.38 244.98 T
3 10 Q
( method on) 507.58 244.98 T
(an e) 207 232.98 T
(xisting construction en) 223.23 232.98 T
(vironment.) 313.94 232.98 T
0 9 Q
(The) 72 203.64 T
4 8 Q
(clone) 90.5 203.64 T
0 9 Q
( method) 114.5 203.64 T
3 10 Q
(The) 207 203.64 T
4 8 Q
(clone) 225.05 203.64 T
3 10 Q
( method creates a clone of an e) 249.05 203.64 T
(xisting construction en) 372.47 203.64 T
(vironment, and can be) 463.18 203.64 T
(called as in the follo) 207 191.64 T
(wing e) 287.85 191.64 T
(xample:) 314.64 191.64 T
4 8 Q
($env2 = $env1->clone\050<overrides>\051;) 162 170.98 T
3 10 Q
(Y) 207 147.64 T
(ou can pro) 213.12 147.64 T
(vide o) 255.18 147.64 T
(v) 279.75 147.64 T
(errides in the usual manner to create a dif) 284.6 147.64 T
(ferent en) 449.86 147.64 T
(vironment from) 484.72 147.64 T
-0.15 (the original. If you just w) 207 135.64 P
-0.15 (ant a ne) 307.83 135.64 P
-0.15 (w name for the same en) 338.38 135.64 P
-0.15 (vironment \050which may be help-) 432.5 135.64 P
(ful when e) 207 123.64 T
(xporting en) 249.06 123.64 T
(vironments to e) 294.49 123.64 T
(xisting components\051, you can just use simple) 356.56 123.64 T
(assignment.) 207 111.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 19
%%Page: "20" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Default construction methods) 189 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(20) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
0 9 Q
(The) 54 683.98 T
4 8 Q
(copy) 72.5 683.98 T
0 9 Q
( method) 91.7 683.98 T
3 10 Q
-0.12 (The) 189 683.98 P
4 8 Q
-0.24 (copy) 206.93 683.98 P
3 10 Q
-0.12 ( method e) 226.13 683.98 P
-0.12 (xtracts the e) 265.17 683.98 P
-0.12 (xternally de\336ned construction v) 313.1 683.98 P
-0.12 (ariables from an en) 439.41 683.98 P
-0.12 (viron-) 515.56 683.98 P
(ment and returns them as a list of name/v) 189 671.98 T
(alue pairs. Ov) 353.73 671.98 T
(errides can also be pro) 409.4 671.98 T
(vided, in) 499.22 671.98 T
-0.06 (which case, the o) 189 659.98 P
-0.06 (v) 257.54 659.98 P
-0.06 (erridden v) 262.39 659.98 P
-0.06 (alues will be returned, as appropriate. The returned list can) 302.89 659.98 P
(be assigned to a hash, as sho) 189 647.98 T
(wn in the prototype, belo) 302.9 647.98 T
(w) 402.92 647.98 T
(, b) 409.49 647.98 T
(ut it can also be manipulated) 419.29 647.98 T
(in other w) 189 635.98 T
(ays:) 229.45 635.98 T
4 8 Q
(%env = $env1->copy\050<overrides>\051;) 144 615.31 T
3 10 Q
(The v) 189 591.98 T
(alue of) 211.8 591.98 T
4 8 Q
(ENV) 241.79 591.98 T
3 10 Q
(, which is itself a hash, is also copied to a ne) 254.9 591.98 T
(w hash, so this may be) 432.13 591.98 T
(changed without fear of af) 189 579.98 T
(fecting the original en) 294.27 579.98 T
(vironment. So, for e) 381.91 579.98 T
(xample, if you) 462.03 579.98 T
(really w) 189 567.98 T
(ant to o) 221.39 567.98 T
(v) 251.24 567.98 T
(erride just the) 256.09 567.98 T
4 8 Q
(PATH) 313.58 567.98 T
3 10 Q
( v) 332.78 567.98 T
(ariable in the def) 340.03 567.98 T
(ault en) 407.41 567.98 T
(vironment, you could do) 433.95 567.98 T
(the follo) 189 555.98 T
(wing:) 222.36 555.98 T
4 8 Q
(%cons = new cons\050\051->copy\050\051;) 144 535.31 T
($cons{ENV}{PATH} = "<your path here>";) 144 525.31 T
($cons = new cons\050%cons\051;) 144 515.31 T
3 10 Q
(This will lea) 189 491.98 T
(v) 238.8 491.98 T
(e an) 243.65 491.98 T
(ything else that might be in the def) 259.88 491.98 T
(ault e) 398.94 491.98 T
(x) 420.73 491.98 T
(ecution en) 425.58 491.98 T
(vironment undis-) 466.56 491.98 T
(turbed.) 189 479.98 T
0 9 Q
(The) 54 450.64 T
4 8 Q
(Install) 72.5 450.64 T
0 9 Q
( method) 106.1 450.64 T
3 10 Q
-0.22 (The) 189 450.64 P
4 8 Q
-0.43 (Install) 206.83 450.64 P
3 10 Q
-0.22 ( method arranges for the speci\336ed \336les to be installed in the speci\336ed direc-) 240.43 450.64 P
(tory) 189 438.64 T
(. The installation is optimized: the \336le is not copied if it can be link) 204.46 438.64 T
(ed. If this is not) 472.97 438.64 T
(the desired beha) 189 426.64 T
(vior) 253.78 426.64 T
(, you will need to use a dif) 269.49 426.64 T
(ferent method to install the \336le. It is) 375.34 426.64 T
(called as follo) 189 414.64 T
(ws:) 244.85 414.64 T
4 8 Q
(Install $env <directory>, <names>;) 144 393.98 T
3 10 Q
(Note that, while the \336les to be installed may be arbitrarily named, only the last compo-) 189 370.64 T
(nent of each name is used for the installed tar) 189 358.64 T
(get name. So, for e) 370.17 358.64 T
(xample, if you arrange) 445.56 358.64 T
(to install) 189 346.64 T
4 8 Q
(foo/bar) 226.23 346.64 T
3 10 Q
( in) 259.83 346.64 T
4 8 Q
(baz) 272.61 346.64 T
3 10 Q
(, this will create a \336le) 287.01 346.64 T
4 8 Q
(bar) 375.61 346.64 T
3 10 Q
( in directory) 390.01 346.64 T
4 8 Q
(baz) 441.39 346.64 T
3 10 Q
( \050not) 455.79 346.64 T
4 8 Q
(foo/bar) 476.9 346.64 T
3 10 Q
(\051.) 510.5 346.64 T
0 9 Q
(The) 54 317.31 T
4 8 Q
(Command) 72.5 317.31 T
0 9 Q
( method) 106.1 317.31 T
3 10 Q
-0.14 (The) 189 317.31 P
4 8 Q
-0.27 (Command) 206.91 317.31 P
3 10 Q
-0.14 ( method is a catchall method which can be used to arrange for an) 240.51 317.31 P
-0.14 (y e) 498.22 317.31 P
-0.14 (xternal) 509.87 317.31 P
(command to be called to update the tar) 189 305.31 T
(get. F) 344.07 305.31 T
(or this command, a tar) 366.7 305.31 T
(get \336le and list of) 456.23 305.31 T
(inputs is pro) 189 293.31 T
(vided. In addition a construction command line, or lines, is pro) 238.3 293.31 T
(vided as a) 489.52 293.31 T
(string \050this string may ha) 189 281.31 T
(v) 288.8 281.31 T
(e multiple commands embedded within it, separated by ne) 293.65 281.31 T
(w) 526.43 281.31 T
(lines\051.) 189 269.31 T
4 8 Q
(Command) 216.22 269.31 T
3 10 Q
( is called as follo) 249.82 269.31 T
(ws:) 317.34 269.31 T
4 8 Q
(Command $env <target>, <inputs>, <construction command>;) 144 248.64 T
3 10 Q
(The tar) 189 225.31 T
(get is made dependent upon the list of input \336les speci\336ed, and the inputs must) 217.42 225.31 T
(be b) 189 213.31 T
(uilt successfully or Cons will not attempt to b) 205.74 213.31 T
(uild the tar) 387.77 213.31 T
(get.) 430.92 213.31 T
-0.2 (W) 189 189.31 P
-0.2 (ithin the construction command, an) 198.04 189.31 P
-0.2 (y v) 338.47 189.31 P
-0.2 (ariable from the construction en) 350.52 189.31 P
-0.2 (vironment may) 477.07 189.31 P
(be introduced by pre\336xing the name of the construction v) 189 177.31 T
(ariable with) 418.44 177.31 T
4 8 Q
(%) 468.43 177.31 T
3 10 Q
(. This is recur-) 473.23 177.31 T
(si) 189 165.31 T
(v) 195.42 165.31 T
(e: the command is e) 200.27 165.31 T
(xpanded until no more substitutions can be made. If a construc-) 280.11 165.31 T
(tion v) 189 153.31 T
(ariable is not de\336ned in the en) 211.81 153.31 T
(vironment, then the null string will be substituted.) 331.95 153.31 T
(There are se) 189 129.31 T
(v) 237.61 129.31 T
(eral pseudo v) 242.46 129.31 T
(ariables which will also be e) 295.53 129.31 T
(xpanded:) 408.97 129.31 T
4 8 Q
(%>) 189 105.31 T
3 10 Q
(The tar) 216 105.31 T
(get \336le name \050in a multi-tar) 244.42 105.31 T
(get command, this is al) 353.95 105.31 T
(w) 446.35 105.31 T
(ays the \336rst tar) 453.47 105.31 T
(get) 512.45 105.31 T
(mentioned\051.) 216 93.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 20
%%Page: "21" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Default construction methods) 207 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(21) 546 59.9 T
4 8 Q
(%0) 207 683.31 T
3 10 Q
(Same as) 234 683.31 T
4 8 Q
(%>) 269.55 683.31 T
3 10 Q
(.) 279.15 683.31 T
4 8 Q
(%1, %2, ..., %9) 207 660.64 T
3 10 Q
(These refer to the \336rst through ninth input) 234 649.31 T
(\336le, respecti) 404.54 649.31 T
(v) 453.17 649.31 T
(ely) 458.02 649.31 T
(.) 469.59 649.31 T
4 8 Q
(%<) 207 625.31 T
3 10 Q
-0.15 (The full set of inputs. If an) 234 625.31 P
-0.15 (y of these ha) 339.9 625.31 P
-0.15 (v) 390.08 625.31 P
-0.15 (e been used an) 394.93 625.31 P
-0.15 (ywhere else in the current) 452.93 625.31 P
(command line \050via) 234 613.31 T
4 8 Q
(%1) 311.49 613.31 T
3 10 Q
(,) 321.09 613.31 T
4 8 Q
(%2) 326.09 613.31 T
3 10 Q
(, etc.\051, then those will be deleted from the list pro) 335.69 613.31 T
(vided) 532.46 613.31 T
(by) 234 601.31 T
4 8 Q
(%<) 246.5 601.31 T
3 10 Q
(. Consider the follo) 256.1 601.31 T
(wing command found in a) 333.07 601.31 T
4 8 Q
(Conscript) 440.56 601.31 T
3 10 Q
( \336le in the direc-) 483.76 601.31 T
(tory) 234 589.31 T
4 8 Q
(test) 252.61 589.31 T
3 10 Q
(:) 271.81 589.31 T
4 8 Q
(Command $env 'tgt', qw\050foo bar baz\051, qq\050) 162 568.64 T
(echo %< -i %1 > %>) 216 558.64 T
(echo %< -i %2 >> %>) 216 548.64 T
(echo %< -i %3 >> %>) 216 538.64 T
(\051;) 162 528.64 T
3 10 Q
-0.09 (If) 234 505.31 P
4 8 Q
-0.17 (tgt) 243.07 505.31 P
3 10 Q
-0.09 ( needed to be updated, then this w) 257.47 505.31 P
-0.09 (ould result in the e) 392.82 505.31 P
-0.09 (x) 466.74 505.31 P
-0.09 (ecution of the follo) 471.59 505.31 P
-0.09 (w-) 547.45 505.31 P
(ing commands, assuming that no remapping has been established for directory) 234 493.31 T
4 8 Q
(test) 234 481.31 T
3 10 Q
(:) 253.2 481.31 T
4 8 Q
(echo test/bar test/baz -i test/foo > test/tgt) 162 460.64 T
(echo test/foo test/baz -i test/bar >> test/tgt) 162 450.64 T
(echo test/foo test/bar -i test/baz >> test/tgt) 162 440.64 T
3 10 Q
-0.36 (An) 207 417.31 P
-0.36 (y of the abo) 219.07 417.31 P
-0.36 (v) 265.32 417.31 P
-0.36 (e pseudo v) 270.17 417.31 P
-0.36 (ariables may be follo) 311.96 417.31 P
-0.36 (wed immediately by) 394.77 417.31 P
4 8 Q
-0.7 (:d) 477.85 417.31 P
3 10 Q
-0.36 ( or) 487.45 417.31 P
4 8 Q
-0.7 (:f) 500.05 417.31 P
3 10 Q
-0.36 (, to indicate) 509.65 417.31 P
-0.19 (the directory or \336le associated with the name. Continuing with the abo) 207 405.31 P
-0.19 (v) 486.36 405.31 P
-0.19 (e e) 491.21 405.31 P
-0.19 (xample,) 502.25 405.31 P
4 8 Q
-0.37 (%<:f) 536.49 405.31 P
3 10 Q
(w) 207 393.31 T
(ould e) 214.12 393.31 T
(xpand to) 238.69 393.31 T
4 8 Q
(foo bar baz) 275.91 393.31 T
3 10 Q
(, and) 328.71 393.31 T
4 8 Q
(%>:d) 350.65 393.31 T
3 10 Q
( w) 369.85 393.31 T
(ould e) 379.47 393.31 T
(xpand to) 404.04 393.31 T
4 8 Q
(test) 441.26 393.31 T
3 10 Q
(.) 460.46 393.31 T
(After substitution occurs, strings of white space are con) 207 369.31 T
(v) 429.06 369.31 T
(erted into single blanks, and) 433.91 369.31 T
(leading and trailing white space is eliminated. It is therefore not possible to introduce) 207 357.31 T
-0.25 (v) 207 345.31 P
-0.25 (ariable length white space in strings passed into a command, without resorting to some) 211.75 345.31 P
(sort of shell quoting.) 207 333.31 T
(If a multi-line command string is pro) 207 309.31 T
(vided, the commands are e) 354.62 309.31 T
(x) 461.39 309.31 T
(ecuted sequentially) 466.24 309.31 T
(. If) 542.52 309.31 T
(an) 207 297.31 T
(y of the commands f) 216.29 297.31 T
(ails, then none of the rest are e) 298.4 297.31 T
(x) 420.44 297.31 T
(ecuted, and the tar) 425.29 297.31 T
(get is not) 498.42 297.31 T
(mark) 207 285.31 T
(ed as updated, i.e. a ne) 227.45 285.31 T
(w signature is not stored for the tar) 317.73 285.31 T
(get.) 457.25 285.31 T
(Normally) 207 261.31 T
(, if all the commands succeed, and return a zero status \050or whate) 244.68 261.31 T
(v) 501.03 261.31 T
(er platform-) 505.88 261.31 T
-0.32 (speci\336c indication of success is required\051, then a ne) 207 249.31 P
-0.32 (w signature is stored for the tar) 409.96 249.31 P
-0.32 (get. If) 532.27 249.31 P
-0.03 (a command erroneously reports success e) 207 237.31 P
-0.03 (v) 372.41 237.31 P
-0.03 (en after a f) 377.26 237.31 P
-0.03 (ailure, then Cons will assume that) 420.11 237.31 P
(the tar) 207 225.31 T
(get \336le created by that command is accurate and up-to-date.) 232.09 225.31 T
-0.06 (The \336rst w) 207 201.31 P
-0.06 (ord of each command string, after e) 250.11 201.31 P
-0.06 (xpansion, is assumed to be an e) 392.07 201.31 P
-0.06 (x) 517.39 201.31 P
-0.06 (ecutable) 522.24 201.31 P
(command look) 207 189.31 T
(ed up on the) 266.62 189.31 T
4 8 Q
(PATH) 318.28 189.31 T
3 10 Q
( en) 337.48 189.31 T
(vironment v) 349.02 189.31 T
(ariable \050which is, in turn, speci\336ed by) 397.38 189.31 T
-0.18 (the) 207 177.31 P
4 8 Q
-0.35 (ENV) 221.54 177.31 P
3 10 Q
-0.18 ( construction v) 235.94 177.31 P
-0.18 (ariable\051. If this command is found on the path, then the tar) 294.76 177.31 P
-0.18 (get will) 525.59 177.31 P
(depend upon it: the command will therefore be automatically b) 207 165.31 T
(uilt, as necessary) 458.71 165.31 T
(. It\325) 526.1 165.31 T
(s) 539.99 165.31 T
(possible to write multi-part commands to some shells, separated by semi-colons. Only) 207 153.31 T
-0.28 (the \336rst command w) 207 141.31 P
-0.28 (ord will be depended upon, ho) 288 141.31 P
-0.28 (we) 408.01 141.31 P
-0.28 (v) 419.42 141.31 P
-0.28 (er) 424.27 141.31 P
-0.28 (, so if you write your command) 431.64 141.31 P
(strings this w) 207 129.31 T
(ay) 260.24 129.31 T
(, you must either e) 269.03 129.31 T
(xplicitly set up a dependenc) 343.04 129.31 T
(y \050with the) 454.54 129.31 T
4 8 Q
(Depends) 500.37 129.31 T
3 10 Q
(method\051, or be sure that the command you are using is a system command which is) 207 117.31 T
(e) 207 105.31 T
(xpected to be a) 211.29 105.31 T
(v) 271.35 105.31 T
(ailable. If it isn\325) 276.1 105.31 T
(t a) 339.8 105.31 T
(v) 349.32 105.31 T
(ailable, you will, of course, get an error) 354.07 105.31 T
(.) 511.26 105.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 21
%%Page: "22" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Default construction methods) 189 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(22) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
3 F
-0.11 (If there are shell meta characters an) 189 683.31 P
-0.11 (ywhere in the e) 330.33 683.31 P
-0.11 (xpanded command line, such as) 391.21 683.31 P
4 8 Q
-0.22 (<) 520.63 683.31 P
3 10 Q
-0.11 (,) 525.43 683.31 P
4 8 Q
-0.22 (>) 530.31 683.31 P
3 10 Q
-0.11 (,) 535.11 683.31 P
(quotes, or semi-colon, then the command will actually be e) 189 671.31 T
(x) 425.21 671.31 T
(ecuted by in) 430.06 671.31 T
(v) 478.54 671.31 T
(oking a shell.) 483.34 671.31 T
(This means that a command such as:) 189 659.31 T
4 8 Q
(cd foo) 144 638.64 T
3 10 Q
(alone will typically f) 189 615.31 T
(ail, since there is no command) 271.95 615.31 T
4 8 Q
(cd) 396.1 615.31 T
3 10 Q
( on the path. But the command) 405.7 615.31 T
(string:) 189 603.31 T
4 8 Q
(cd $<:d; tar cf $>:f $<:f) 144 582.64 T
3 10 Q
-0.22 (when e) 189 559.31 P
-0.22 (xpanded will still contain the shell meta character semi-colon, and a shell will be) 217.23 559.31 P
(in) 189 547.31 T
(v) 196.38 547.31 T
(ok) 201.18 547.31 T
(ed to interpret the command. Since) 211.08 547.31 T
4 8 Q
(cd) 353.56 547.31 T
3 10 Q
( is interpreted by this sub-shell, the com-) 363.16 547.31 T
(mand will e) 189 535.31 T
(x) 236.07 535.31 T
(ecute as e) 240.92 535.31 T
(xpected.) 279.64 535.31 T
(T) 189 511.31 T
(o specify a command with multiple tar) 194.31 511.31 T
(gets, you can specify a reference to a list of tar-) 348.56 511.31 T
-0.19 (gets. In Perl, a list reference can be created by enclosing a list in square brack) 189 499.31 P
-0.19 (ets. Hence) 496.23 499.31 P
(the follo) 189 487.31 T
(wing command:) 222.36 487.31 T
4 8 Q
(Command $env ['foo.h', 'foo.c'], 'foo.template', q\050) 144 466.64 T
(gen %1) 198 456.64 T
(\051;) 144 446.64 T
3 10 Q
-0.22 (could be used in a case where the command) 189 423.31 P
4 8 Q
-0.41 (gen) 365.06 423.31 P
3 10 Q
-0.22 ( creates tw) 379.46 423.31 P
-0.22 (o \336les, both) 421.69 423.31 P
4 8 Q
-0.41 (foo.h) 470.49 423.31 P
3 10 Q
-0.22 ( and) 494.49 423.31 P
4 8 Q
-0.41 (foo.c) 513.5 423.31 P
3 10 Q
-0.22 (.) 537.5 423.31 P
0 9 Q
(The) 54 393.98 T
4 8 Q
(Objects) 72.5 393.98 T
0 9 Q
( method) 106.1 393.98 T
3 10 Q
(The) 189 393.98 T
4 8 Q
(Objects) 207.05 393.98 T
3 10 Q
( method arranges to create the object \336les that correspond to the speci\336ed) 240.65 393.98 T
(source \336les. It is in) 189 381.98 T
(v) 264.43 381.98 T
(ok) 269.23 381.98 T
(ed as sho) 279.13 381.98 T
(wn belo) 315.54 381.98 T
(w:) 347.23 381.98 T
4 8 Q
(@files = Objects $env <source or object files>;) 144 361.31 T
3 10 Q
(Under Unix, source \336les ending in) 189 337.98 T
4 8 Q
(.s) 329.26 337.98 T
3 10 Q
( and) 338.86 337.98 T
4 8 Q
(.c) 358.3 337.98 T
3 10 Q
( are currently supported, and will be com-) 367.9 337.98 T
-0.1 (piled into a name of the same \336le ending in) 189 325.98 P
4 8 Q
-0.19 (.o) 363.57 325.98 P
3 10 Q
-0.1 (. By def) 373.17 325.98 P
-0.1 (ault, all \336les are created by in) 404.82 325.98 P
-0.1 (v) 521.87 325.98 P
-0.1 (ok-) 526.67 325.98 P
-0.19 (ing the e) 189 313.98 P
-0.19 (xternal command which results from e) 222.9 313.98 P
-0.19 (xpanding the) 375.93 313.98 P
4 8 Q
-0.37 (CCOM) 429.98 313.98 P
3 10 Q
-0.19 ( construction v) 449.18 313.98 P
-0.19 (ariable,) 507.98 313.98 P
(with) 189 301.98 T
4 8 Q
(%<) 209.28 301.98 T
3 10 Q
( and) 218.88 301.98 T
4 8 Q
(%>) 238.32 301.98 T
3 10 Q
( set to the source and object \336les, respecti) 247.92 301.98 T
(v) 414.03 301.98 T
(ely \050see the) 418.88 301.98 T
4 8 Q
(Command) 466.92 301.98 T
3 10 Q
( method) 500.52 301.98 T
-0.29 (for e) 189 289.98 P
-0.29 (xpansion details\051 . The v) 207.16 289.98 P
-0.29 (ariable) 304.35 289.98 P
4 8 Q
-0.56 (CPPPATH) 333.77 289.98 P
3 10 Q
-0.29 ( is also used when scanning source \336les for) 367.37 289.98 P
(dependencies. This is a colon separated list of pathnames, and is also used to create the) 189 277.98 T
(construction v) 189 265.98 T
(ariable) 245.69 265.98 T
4 8 Q
(_IFLAGS,) 275.4 265.98 T
3 10 Q
( which will contain the appropriate list of -) 313.8 265.98 T
4 8 Q
(I) 484.89 265.98 T
3 10 Q
( options for) 489.69 265.98 T
(the compilation. An) 189 253.98 T
(y relati) 268.57 253.98 T
(v) 296.37 253.98 T
(e pathnames in) 301.22 253.98 T
4 8 Q
(CPPPATH) 363.71 253.98 T
3 10 Q
( is interpreted relati) 397.31 253.98 T
(v) 475.1 253.98 T
(e to the direc-) 479.95 253.98 T
(tory in which the associated construction en) 189 241.98 T
(vironment w) 364.13 241.98 T
(as created \050absolute and top-) 414.86 241.98 T
(relati) 189 229.98 T
(v) 209.3 229.98 T
(e names may also be used\051. This v) 214.15 229.98 T
(ariable is used by) 351.1 229.98 T
4 8 Q
(CCOM) 423.31 229.98 T
3 10 Q
(. The beha) 442.51 229.98 T
(vior of this) 484.24 229.98 T
(command can be modi\336ed by changing an) 189 217.98 T
(y of the v) 358.27 217.98 T
(ariables which are interpolated into) 396.07 217.98 T
4 8 Q
-0.44 (CCOM) 189 205.98 P
3 10 Q
-0.23 (, such as) 208.2 205.98 P
4 8 Q
-0.44 (CC) 244.17 205.98 P
3 10 Q
-0.23 (,) 253.77 205.98 P
4 8 Q
-0.44 (CFLAGS) 258.55 205.98 P
3 10 Q
-0.23 (, and, indirectly) 287.35 205.98 P
-0.23 (,) 349.01 205.98 P
4 8 Q
-0.44 (CPPPATH) 353.78 205.98 P
3 10 Q
-0.23 (. It\325) 387.38 205.98 P
-0.23 (s also possible to replace the v) 401.04 205.98 P
-0.23 (alue) 521.07 205.98 P
(of) 189 193.98 T
4 8 Q
(CCOM) 199.83 193.98 T
3 10 Q
(, itself. As a con) 219.03 193.98 T
(v) 283.62 193.98 T
(enience, this \336le returns the list of object \336lenames.) 288.47 193.98 T
0 9 Q
(The) 54 164.64 T
4 8 Q
(Program) 72.5 164.64 T
0 9 Q
( method) 106.1 164.64 T
3 10 Q
(The) 189 164.64 T
4 8 Q
(Program) 207.05 164.64 T
3 10 Q
( method arranges to link the speci\336ed program with the speci\336ed object) 240.65 164.64 T
(\336les. It is in) 189 152.64 T
(v) 235.83 152.64 T
(ok) 240.63 152.64 T
(ed in the follo) 250.53 152.64 T
(wing manner:) 306.11 152.64 T
4 8 Q
(Program $env <program name>, <source or object files>;) 144 131.98 T
3 10 Q
(Source \336les may be speci\336ed in place of objects \336les\321the) 189 108.64 T
4 8 Q
(Objects) 425.08 108.64 T
3 10 Q
( method will be) 458.68 108.64 T
(in) 189 96.64 T
(v) 196.38 96.64 T
(ok) 201.18 96.64 T
(ed to arrange the con) 211.08 96.64 T
(v) 294.54 96.64 T
(ersion of all the \336les into object \336les, and hence all the) 299.39 96.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 22
%%Page: "23" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Default construction methods) 207 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(23) 546 59.9 T
3 10 Q
(observ) 207 683.31 T
(ations about the) 233.41 683.31 T
4 8 Q
(Objects) 299.24 683.31 T
3 10 Q
( method, abo) 332.84 683.31 T
(v) 384.63 683.31 T
(e, apply to this method also. The actual) 389.48 683.31 T
(linking of the program will be handled by an e) 207 671.31 T
(xternal command which results from) 392.66 671.31 T
(e) 207 659.31 T
(xpanding the) 211.29 659.31 T
4 8 Q
(LINKCOM) 265.73 659.31 T
3 10 Q
( construction v) 299.33 659.31 T
(ariable, with) 358.52 659.31 T
4 8 Q
(%<) 411.01 659.31 T
3 10 Q
( set to the object \336les to be link) 420.61 659.31 T
(ed) 545.51 659.31 T
(\050in the order presented\051, and) 207 647.31 T
4 8 Q
(%>) 322.52 647.31 T
3 10 Q
( set to the tar) 332.12 647.31 T
(get \050see the) 383.6 647.31 T
4 8 Q
(Command) 431.64 647.31 T
3 10 Q
( method for e) 465.24 647.31 T
(xpansion) 518.69 647.31 T
(details\051. The user may set additional v) 207 635.31 T
(ariables in the construction en) 359.23 635.31 T
(vironment, includ-) 478.81 635.31 T
(ing) 207 623.31 T
4 8 Q
(LINK) 222.28 623.31 T
3 10 Q
(, to de\336ne which program to use for linking,) 241.48 623.31 T
4 8 Q
(LIBPATH) 420.63 623.31 T
3 10 Q
(, a colon-separated list of) 454.23 623.31 T
(library search paths, for use with library speci\336cations of the form) 207 611.31 T
4 8 Q
(-) 474.17 611.31 T
(l<lib>) 478.97 611.31 T
3 10 Q
(, and) 507.77 611.31 T
4 8 Q
(LIBS) 529.71 611.31 T
3 10 Q
(,) 548.91 611.31 T
(specifying the list of libraries to link ag) 207 599.31 T
(ainst \050in either) 364.44 599.31 T
4 8 Q
(-l<lib>) 424.71 599.31 T
3 10 Q
( form or just as path-) 458.31 599.31 T
(names. Relati) 207 587.31 T
(v) 261.19 587.31 T
(e pathnames in both) 266.04 587.31 T
4 8 Q
(LIBPATH) 348.81 587.31 T
3 10 Q
( and) 382.41 587.31 T
4 8 Q
(LIBS) 401.85 587.31 T
3 10 Q
( are interpreted relati) 421.05 587.31 T
(v) 504.38 587.31 T
(e to the) 509.23 587.31 T
(directory in which the associated construction en) 207 575.31 T
(vironment created \050absolute and top-) 402.12 575.31 T
(relati) 207 563.31 T
(v) 227.3 563.31 T
(e names may also be used\051. Cons automatically sets up dependencies on an) 232.15 563.31 T
(y) 532.23 563.31 T
(libraries mentioned in) 207 551.31 T
4 8 Q
(LIBS) 297.27 551.31 T
3 10 Q
(: those libraries will be b) 316.47 551.31 T
(uilt before the command is link) 415.43 551.31 T
(ed.) 540.6 551.31 T
0 9 Q
(The) 72 521.98 T
4 8 Q
(Library) 90.5 521.98 T
0 9 Q
( method) 124.1 521.98 T
3 10 Q
(The) 207 521.98 T
4 8 Q
(Library) 225.05 521.98 T
3 10 Q
( method arranges to create the speci\336ed library from the speci\336ed object) 258.65 521.98 T
(\336les. It is in) 207 509.98 T
(v) 253.83 509.98 T
(ok) 258.63 509.98 T
(ed as follo) 268.53 509.98 T
(ws:) 309.94 509.98 T
4 8 Q
(Library $env <library name>, <source or object files>;) 162 489.31 T
3 10 Q
(Source \336les may be speci\336ed in place of objects \336les\321the) 207 465.98 T
4 8 Q
(Objects) 443.08 465.98 T
3 10 Q
( method will be) 476.68 465.98 T
(in) 207 453.98 T
(v) 214.38 453.98 T
(ok) 219.18 453.98 T
(ed to arrange the con) 229.08 453.98 T
(v) 312.54 453.98 T
(ersion of all the \336les into object \336les, and hence all the) 317.39 453.98 T
(observ) 207 441.98 T
(ations about the) 233.41 441.98 T
4 8 Q
(Objects) 299.24 441.98 T
3 10 Q
( method, abo) 332.84 441.98 T
(v) 384.63 441.98 T
(e, apply to this method also. The actual) 389.48 441.98 T
(creation of the library will be handled by an e) 207 429.98 T
(xternal command which results from) 389.31 429.98 T
(e) 207 417.98 T
(xpanding the) 211.29 417.98 T
4 8 Q
(ARCOM) 265.73 417.98 T
3 10 Q
( construction v) 289.73 417.98 T
(ariable, with) 348.92 417.98 T
4 8 Q
(%<) 401.41 417.98 T
3 10 Q
( set to the library members \050in the) 411.01 417.98 T
(order presented\051, and) 207 405.98 T
4 8 Q
(%>) 294.19 405.98 T
3 10 Q
( to the library to be created \050see the) 303.79 405.98 T
4 8 Q
(Command) 447.36 405.98 T
3 10 Q
( method for e) 480.96 405.98 T
(xpan-) 534.41 405.98 T
(sion details\051. The user may set v) 207 393.98 T
(ariables in the construction en) 335.9 393.98 T
(vironment which will) 455.48 393.98 T
(af) 207 381.98 T
(fect the operation of the command. These include) 214.52 381.98 T
4 8 Q
(AR) 415.31 381.98 T
3 10 Q
(, the archi) 424.91 381.98 T
(v) 464.37 381.98 T
(e program to use,) 469.22 381.98 T
4 8 Q
(ARFLAGS) 207 369.98 T
3 10 Q
(, which can be used to modify the \337ags gi) 240.6 369.98 T
(v) 407 369.98 T
(en to the program speci\336ed by) 411.85 369.98 T
4 8 Q
(AR) 535.72 369.98 T
3 10 Q
(,) 545.32 369.98 T
-0.2 (and) 207 357.98 P
4 8 Q
-0.38 (RANLIB) 223.74 357.98 P
3 10 Q
-0.2 (, the name of a archi) 252.54 357.98 P
-0.2 (v) 332.93 357.98 P
-0.2 (e inde) 337.78 357.98 P
-0.2 (x generation program, if needed \050if the particular) 361.6 357.98 P
(need does not require the latter functionality) 207 345.98 T
(, then) 383.54 345.98 T
4 8 Q
(ARCOM) 408.26 345.98 T
3 10 Q
( must be rede\336ned to not refer-) 432.26 345.98 T
(ence) 207 333.98 T
4 8 Q
(RANLIB) 227.82 333.98 T
3 10 Q
(\051.) 256.62 333.98 T
(The) 207 309.98 T
4 8 Q
(Library) 225.05 309.98 T
3 10 Q
( method allo) 258.65 309.98 T
(ws the same library to be speci\336ed in multiple method in) 308.4 309.98 T
(v) 535.21 309.98 T
(oca-) 540.01 309.98 T
-0.19 (tions. All of the contrib) 207 297.98 P
-0.19 (uting objects from all the in) 299.66 297.98 P
-0.19 (v) 409.15 297.98 P
-0.19 (ocations \050which may be from dif) 413.95 297.98 P
-0.19 (fer-) 543.57 297.98 P
(ent directories\051 are combined and generated by a single archi) 207 285.98 T
(v) 450.29 285.98 T
(e command. Note,) 455.14 285.98 T
(ho) 207 273.98 T
(we) 216.75 273.98 T
(v) 228.16 273.98 T
(er) 233.01 273.98 T
(, that if you prune a b) 240.38 273.98 T
(uild so that only part of a library is speci\336ed, then only) 326 273.98 T
(that part of the library will be generated \050the rest will disappear!\051.) 207 261.98 T
0 9 Q
(The) 72 232.64 T
4 8 Q
(Module) 90.5 232.64 T
0 9 Q
( method) 119.3 232.64 T
3 10 Q
-0.14 (The) 207 232.64 P
4 8 Q
-0.26 (Module) 224.91 232.64 P
3 10 Q
-0.14 ( method is a combination of the) 253.71 232.64 P
4 8 Q
-0.26 (Program) 381.91 232.64 P
3 10 Q
-0.14 ( and) 415.51 232.64 P
4 8 Q
-0.26 (Command) 434.68 232.64 P
3 10 Q
-0.14 ( methods. Rather than) 468.28 232.64 P
(generating an e) 207 220.64 T
(x) 267.94 220.64 T
(ecutable program directly) 272.79 220.64 T
(, this command allo) 374.89 220.64 T
(ws you to specify your) 453.53 220.64 T
(o) 207 208.64 T
(wn command to actually generate a module. The method is in) 211.75 208.64 T
(v) 458.26 208.64 T
(ok) 463.06 208.64 T
(ed as follo) 472.96 208.64 T
(ws:) 514.37 208.64 T
4 8 Q
(Module $env <module name>, <source or object files>, <construction command>;) 162 187.98 T
3 10 Q
(This command is useful in instances where you wish to create, for e) 207 164.64 T
(xample, dynami-) 478.19 164.64 T
(cally loaded modules, or statically link) 207 152.64 T
(ed code libraries.) 361.89 152.64 T
0 9 Q
(The) 72 123.31 T
4 8 Q
(Depends) 90.5 123.31 T
0 9 Q
( method) 124.1 123.31 T
3 10 Q
(The) 207 123.31 T
4 8 Q
(Depends) 225.05 123.31 T
3 10 Q
( method allo) 258.65 123.31 T
(ws you to specify additional dependencies for a tar) 308.4 123.31 T
(get. It is) 511.51 123.31 T
(in) 207 111.31 T
(v) 214.38 111.31 T
(ok) 219.18 111.31 T
(ed as follo) 229.08 111.31 T
(ws:) 270.49 111.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 23
%%Page: "24" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Extending Cons) 189 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(24) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
4 8 Q
(Depends $env <target>, <dependencies>;) 144 684.64 T
3 10 Q
(This may be occasionally useful, especially in cases where no scanner e) 189 661.31 T
(xists \050or is writ-) 476 661.31 T
(able\051 for particular types of \336les. Normally) 189 649.31 T
(, dependencies are calculated automatically) 360.26 649.31 T
(from a combination of the e) 189 637.31 T
(xplicit dependencies set up by the method in) 300.22 637.31 T
(v) 477.86 637.31 T
(ocation or by) 482.66 637.31 T
(scanning source \336les.) 189 625.31 T
189 568.98 540 571.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 571.13 540 571.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Extending Cons) 189 576.64 T
0 9 Q
(Overriding construction) 54 542.98 T
(v) 54 531.98 T
(ariab) 58.82 531.98 T
(les) 80.24 531.98 T
3 10 Q
(There are se) 189 542.98 T
(v) 237.61 542.98 T
(eral w) 242.46 542.98 T
(ays of e) 267.07 542.98 T
(xtending Cons, which v) 298.02 542.98 T
(ary in de) 392.77 542.98 T
(gree of dif) 427.61 542.98 T
(\336culty) 469.01 542.98 T
(. The sim-) 493.92 542.98 T
(plest method is to de\336ne your o) 189 530.98 T
(wn construction en) 314.86 530.98 T
(vironment, based on the def) 390.56 530.98 T
(ault en) 501.83 530.98 T
(vi-) 528.37 530.98 T
(ronment, b) 189 518.98 T
(ut modi\336ed to re\337ect your particular needs. This will often suf) 232.13 518.98 T
(\336ce for C-) 481.02 518.98 T
-0.21 (based applications. Y) 189 506.98 P
-0.21 (ou can use the) 273.3 506.98 P
4 8 Q
-0.4 (new) 331.91 506.98 P
3 10 Q
-0.21 ( constructor) 346.31 506.98 P
-0.21 (, and the) 393.19 506.98 P
4 8 Q
-0.4 (clone) 429.23 506.98 P
3 10 Q
-0.21 ( and) 453.23 506.98 P
4 8 Q
-0.4 (copy) 472.25 506.98 P
3 10 Q
-0.21 ( methods to) 491.45 506.98 P
-0.27 (create h) 189 494.98 P
-0.27 (ybrid en) 220.05 494.98 P
-0.27 (vironments. These changes can be entirely transparent to the underlying) 252.44 494.98 P
4 8 Q
(Conscript) 189 482.98 T
3 10 Q
( \336les.) 232.2 482.98 T
0 9 Q
(Ad) 54 453.64 T
(ding ne) 65.91 453.64 T
(w methods) 97.78 453.64 T
3 10 Q
(F) 189 453.64 T
(or slightly more demanding changes, you may wish to add ne) 194.41 453.64 T
(w methods to the) 439.97 453.64 T
4 8 Q
(cons) 511.08 453.64 T
3 10 Q
(package. Here\325) 189 441.64 T
(s an e) 248.97 441.64 T
(xample of a v) 271.59 441.64 T
(ery simple e) 326.15 441.64 T
(xtension,) 374.88 441.64 T
4 8 Q
(InstallScript) 413.77 441.64 T
3 10 Q
(, which installs) 476.17 441.64 T
(a tcl script in a requested location, b) 189 429.64 T
(ut edits the script \336rst to re\337ect a platform-depen-) 333.22 429.64 T
(dent path that needs to be installed in the script:) 189 417.64 T
4 8 Q
(# cons::InstallScript - Create a platform dependent version of a shell script) 144 396.98 T
(# by replacing string \322#!your-path-here\323 with platform specific path $BIN_DIR.) 144 386.98 T
(sub cons::InstallScript {) 144 376.98 T
(my\050$env, $dst, $src\051 = shift;) 198 366.98 T
(Command $env $dst, $src, qq\050) 198 356.98 T
(sed s+your-path-here+$BINDIR+ %< > %>) 234 346.98 T
(chmod oug+x %>) 234 336.98 T
(\051;) 198 326.98 T
(}) 144 316.98 T
3 10 Q
(Notice that this method is de\336ned directly in the) 189 293.64 T
4 8 Q
(cons) 384.27 293.64 T
3 10 Q
( package \050by pre\336xing the name) 403.47 293.64 T
(with) 189 281.64 T
4 8 Q
(cons::) 209.28 281.64 T
3 10 Q
(\051. A change made in this manner will be globally visible to all en) 238.08 281.64 T
(viron-) 497.1 281.64 T
(ments, and could be called as in the follo) 189 269.64 T
(wing e) 352.34 269.64 T
(xample:) 379.13 269.64 T
4 8 Q
(InstallScript $env "$BIN/foo", "foo.tcl";) 144 248.98 T
3 10 Q
(F) 189 225.64 T
(or a small impro) 194.41 225.64 T
(v) 260.09 225.64 T
(ement in generality) 264.94 225.64 T
(, the) 341.5 225.64 T
4 8 Q
(BINDIR) 361.22 225.64 T
3 10 Q
( v) 390.02 225.64 T
(ariable could be passed in as an) 397.27 225.64 T
(ar) 189 213.64 T
(gument or tak) 196.59 213.64 T
(en from the construction en) 252.04 213.64 T
(vironment\321as) 361.62 213.64 T
4 8 Q
(%BINDIR) 423.56 213.64 T
3 10 Q
(.) 457.16 213.64 T
0 9 Q
(Overriding methods) 54 184.31 T
3 10 Q
(Instead of adding the method to the) 189 184.31 T
4 8 Q
(cons) 333.15 184.31 T
3 10 Q
( name space, you could de\336ne a ne) 352.35 184.31 T
(w package) 491.51 184.31 T
(which inherits e) 189 172.31 T
(xisting methods from the) 252.73 172.31 T
4 8 Q
(cons) 355.51 172.31 T
3 10 Q
( package and o) 374.71 172.31 T
(v) 434.26 172.31 T
(errides or adds others.) 439.11 172.31 T
(This can be done using Perl\325) 189 160.31 T
(s inheritance mechanisms.) 302.6 160.31 T
(The follo) 189 136.31 T
(wing e) 225.69 136.31 T
(xample de\336nes a ne) 252.48 136.31 T
(w package cons::switch which o) 331.38 136.31 T
(v) 460.65 136.31 T
(errides the stan-) 465.5 136.31 T
-0.35 (dard) 189 124.31 P
4 8 Q
-0.67 (Library) 208.92 124.31 P
3 10 Q
-0.35 ( method. The o) 242.52 124.31 P
-0.35 (v) 301.88 124.31 P
-0.35 (erridden method b) 306.73 124.31 P
-0.35 (uilds link) 379.15 124.31 P
-0.35 (ed library modules, rather than) 416.21 124.31 P
(library archi) 189 112.31 T
(v) 237.9 112.31 T
(es. A ne) 242.75 112.31 T
(w constructor is pro) 274.99 112.31 T
(vided. En) 354.55 112.31 T
(vironments created with this Con-) 392.48 112.31 T
(structor will ha) 189 100.31 T
(v) 249.35 100.31 T
(e the ne) 254.2 100.31 T
(w library method; others w) 285.05 100.31 T
(on\325) 393.27 100.31 T
(t.) 406.42 100.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 24
%%Page: "25" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(In) 207 737.5 T
(v) 213.79 737.5 T
(oking Cons) 218 737.5 T
72 75.33 558 75.33 2 L
2 Z
N
2 10 Q
(Cons: A Softwar) 207 59.9 T
(e Construction System) 272.75 59.9 T
1 12 Q
(25) 546 59.9 T
4 8 Q
(package cons::switch;) 162 664.64 T
(BEGIN {@ISA = \324cons\325}) 162 654.64 T
(sub new {) 162 634.64 T
(shift;) 216 624.64 T
(bless new cons\050@_\051;) 216 614.64 T
(}) 162 604.64 T
(sub Library {) 162 584.64 T
(my\050$env\051 = shift;) 216 574.64 T
(my\050$lib\051 = shift;) 216 564.64 T
(my\050@objs\051 = Objects $env @_;) 216 554.64 T
(Command $env $lib, @objs, q\050) 216 544.64 T
(%LD -r %LDFLAGS %< -o %>) 252 534.64 T
(\051;) 216 524.64 T
(}) 162 514.64 T
3 10 Q
(This functionality could be in) 207 491.31 T
(v) 324.93 491.31 T
(ok) 329.73 491.31 T
(ed as in the follo) 339.63 491.31 T
(wing e) 406.04 491.31 T
(xample:) 432.83 491.31 T
4 8 Q
($env = new cons::switch\050@overrides\051;) 162 470.64 T
(...) 162 460.64 T
(Library $env 'lib.o', 'foo.c', 'bar.c';) 162 450.64 T
207 394.98 558 397.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 397.13 558 397.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(In) 207 402.64 T
(voking Cons) 218.1 402.64 T
3 10 Q
(The) 207 378.31 T
4 8 Q
(cons) 225.05 378.31 T
3 10 Q
( command is al) 244.25 378.31 T
(w) 304.98 378.31 T
(ays in) 312.1 378.31 T
(v) 335.31 378.31 T
(ok) 340.11 378.31 T
(ed from the root of the b) 350.01 378.31 T
(uild tree. A) 447.57 378.31 T
4 8 Q
(Construct) 495.34 378.31 T
3 10 Q
( \336le) 538.54 378.31 T
(must e) 207 366.31 T
(xist in that directory) 233.24 366.31 T
(. If the) 313.42 366.31 T
4 8 Q
(-f) 342.3 366.31 T
3 10 Q
( ar) 351.9 366.31 T
(gument is used, then an alternate) 361.99 366.31 T
4 8 Q
(Construct) 495.58 366.31 T
3 10 Q
( \336le) 538.78 366.31 T
-0.16 (may be used \050and, possibly) 207 354.31 P
-0.16 (, an alternate root, since) 314.32 354.31 P
4 8 Q
-0.31 (cons) 411.55 354.31 P
3 10 Q
-0.16 ( will cd to) 430.75 354.31 P
4 8 Q
-0.31 (Construct) 472.9 354.31 P
3 10 Q
-0.16 ( \336le\325) 516.1 354.31 P
-0.16 (s con-) 534 354.31 P
(taining directory\051. The command is in) 207 342.31 T
(v) 358.25 342.31 T
(ok) 363.05 342.31 T
(ed as follo) 372.95 342.31 T
(ws:) 414.36 342.31 T
4 8 Q
(cons <arguments>) 162 321.64 T
3 10 Q
(where) 207 298.31 T
4 8 Q
(<arguments>) 233.93 298.31 T
3 10 Q
( can be an) 286.73 298.31 T
(y of the follo) 326.84 298.31 T
(wing, in an) 378.53 298.31 T
(y order:) 423.1 298.31 T
4 8 Q
(<target>) 207 274.31 T
3 10 Q
(Build the speci\336ed tar) 270 274.31 T
(get. If) 357.87 274.31 T
4 8 Q
(<target>) 384.25 274.31 T
3 10 Q
( is a directory) 422.65 274.31 T
(, then recursi) 476.71 274.31 T
(v) 528.39 274.31 T
(ely) 533.24 274.31 T
(b) 270 262.31 T
(uild e) 274.8 262.31 T
(v) 297.05 262.31 T
(erything within that directory) 301.9 262.31 T
(.) 418.74 262.31 T
4 8 Q
(+<pattern>) 207 238.31 T
3 10 Q
(Limit the) 270 238.31 T
4 8 Q
(Conscript) 309.45 238.31 T
3 10 Q
(\336les considered to just those that match) 357.45 238.31 T
4 8 Q
(<pat-) 517.72 238.31 T
(tern>) 270 226.31 T
3 10 Q
(, which is a Perl re) 294 226.31 T
(gular e) 368.28 226.31 T
(xpression. Multiple) 395.62 226.31 T
4 8 Q
(+) 475.9 226.31 T
3 10 Q
( ar) 480.7 226.31 T
(guments are) 490.79 226.31 T
(accepted.) 270 214.31 T
4 8 Q
(<name>=<val>) 207 190.31 T
3 10 Q
(Sets) 270 190.31 T
4 8 Q
(<name>) 289.17 190.31 T
3 10 Q
( to v) 317.97 190.31 T
(alue) 335.5 190.31 T
4 8 Q
(<val>) 354.66 190.31 T
3 10 Q
( in the) 378.66 190.31 T
4 8 Q
(ARG) 406.16 190.31 T
3 10 Q
( hash passed to the top-le) 420.56 190.31 T
(v) 521.13 190.31 T
(el) 525.98 190.31 T
4 8 Q
(Con-) 535.7 190.31 T
(struct) 270 178.31 T
3 10 Q
( \336le.) 298.8 178.31 T
4 8 Q
(-f <file>) 207 154.31 T
3 10 Q
(Use the speci\336ed \336le instead of) 270 154.31 T
4 8 Q
(Construct) 397.76 154.31 T
3 10 Q
( \050b) 440.96 154.31 T
(ut \336rst change to contain-) 451.59 154.31 T
(ing directory of) 270 142.31 T
4 8 Q
(<file>) 334.71 142.31 T
3 10 Q
(\051.) 363.51 142.31 T
4 8 Q
(-o <file>) 207 118.31 T
3 10 Q
(Read o) 270 118.31 T
(v) 297.9 118.31 T
(erride \336le) 302.75 118.31 T
4 8 Q
(<file>) 343.85 118.31 T
3 10 Q
(.) 372.65 118.31 T
4 8 Q
(-k) 207 94.31 T
3 10 Q
(K) 270 94.31 T
(eep going as f) 276.97 94.31 T
(ar as possible after errors.) 332.69 94.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 25
%%Page: "26" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 750.68 540 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(Using and writing dependenc) 189 737.5 T
(y scanner) 300.5 737.5 T
(s) 337.73 737.5 T
54 75.33 540 75.33 2 L
2 Z
N
1 12 Q
(26) 54 59.9 T
2 10 Q
(Cons: A Softwar) 189 59.9 T
(e Construction System) 254.75 59.9 T
4 8 Q
(-p) 189 683.31 T
3 10 Q
(Sho) 252 683.31 T
(w construction products in speci\336ed trees. No b) 267.31 683.31 T
(uild is attempted.) 457.64 683.31 T
4 8 Q
(-pa) 189 659.31 T
3 10 Q
(Sho) 252 659.31 T
(w construction products and associated actions. No b) 267.31 659.31 T
(uild is) 479.3 659.31 T
(attempted.) 252 647.31 T
4 8 Q
(-pw) 189 623.31 T
3 10 Q
(Sho) 252 623.31 T
(w products and where the) 267.31 623.31 T
(y are de\336ned. No b) 369.91 623.31 T
(uild is attempted.) 446.08 623.31 T
4 8 Q
(-r) 189 599.31 T
3 10 Q
(Remo) 252 599.31 T
(v) 275.74 599.31 T
(e construction products associated with <tar) 280.59 599.31 T
(gets>. No b) 456.3 599.31 T
(uild is) 502.57 599.31 T
(attempted.) 252 587.31 T
4 8 Q
(-v) 189 563.31 T
3 10 Q
(Sho) 252 563.31 T
(w) 267.31 563.31 T
4 8 Q
(cons) 277.03 563.31 T
3 10 Q
( v) 296.23 563.31 T
(ersion and continue processing.) 303.58 563.31 T
4 8 Q
(-x) 189 539.31 T
3 10 Q
(Sho) 252 539.31 T
(w a help message similar to this one, and e) 267.31 539.31 T
(xit.) 438.25 539.31 T
(Note that) 189 515.31 T
4 8 Q
( cons -r .) 225.94 515.31 T
3 10 Q
( is equi) 273.94 515.31 T
(v) 302.58 515.31 T
(alent to a full recursi) 307.33 515.31 T
(v) 389.84 515.31 T
(e) 394.69 515.31 T
4 8 Q
(make clean) 401.63 515.31 T
3 10 Q
(, b) 449.63 515.31 T
(ut requires no sup-) 459.43 515.31 T
(port in the) 189 503.31 T
4 8 Q
(Construct) 232.61 503.31 T
3 10 Q
( \336le or an) 275.81 503.31 T
(y) 313.71 503.31 T
4 8 Q
(Conscript) 321.21 503.31 T
3 10 Q
( \336les. This is most useful if you are compil-) 364.41 503.31 T
(ing \336les into source directories \050if you separate the) 189 491.31 T
4 8 Q
(build) 394.24 491.31 T
3 10 Q
(/) 418.24 491.31 T
4 8 Q
(export) 421.02 491.31 T
3 10 Q
( directories, then you) 449.82 491.31 T
(can just remo) 189 479.31 T
(v) 242.73 479.31 T
(e the directories\051.) 247.58 479.31 T
-0.03 (The options) 189 455.31 P
4 8 Q
-0.05 (-p) 238.94 455.31 P
3 10 Q
-0.03 (,) 248.54 455.31 P
4 8 Q
-0.05 (-pa) 253.51 455.31 P
3 10 Q
-0.03 (, and) 267.91 455.31 P
4 8 Q
-0.05 (-pw) 289.8 455.31 P
3 10 Q
-0.03 ( are e) 304.2 455.31 P
-0.03 (xtremely useful for use as an aid in reading scripts or) 325.64 455.31 P
(deb) 189 443.31 T
(ugging them. If you w) 203.24 443.31 T
(ant to kno) 292.3 443.31 T
(w what script installs) 332.05 443.31 T
4 8 Q
(export/include/foo.h) 419.27 443.31 T
3 10 Q
(, for) 515.27 443.31 T
(e) 189 431.31 T
(xample, just type:) 193.29 431.31 T
4 8 Q
(cons -pw export/include/foo.h) 144 410.64 T
189 354.98 540 357.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 357.13 540 357.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(Using and writing dependency scanner) 189 362.64 T
(s) 408.17 362.64 T
3 10 Q
(T) 189 338.31 T
(.B.S.) 194.37 338.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 26
%%Page: "1" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 750.68 558 750.68 2 L
0.25 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(T) 207 735.66 T
(ab) 211.25 735.66 T
(le of Contents) 220.5 735.66 T
72 75.33 558 75.33 2 L
2 Z
N
1 12 Q
(1) 552 44.65 T
207 672.98 558 675.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 675.13 558 675.13 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(T) 207 680.64 T
(able of Contents) 213.5 680.64 T
(Intr) 207 635.64 T
(oduction) 227.37 635.64 T
(........................................................................) 276.5 635.64 T
(1) 531 635.64 T
(Why Cons? Why not Mak) 207 615.64 T
(e?) 349.17 615.64 T
(...............................................) 364 615.64 T
(2) 531 615.64 T
(K) 207 595.64 T
(eeping it simple) 215.85 595.64 T
(...............................................................) 308 595.64 T
(3) 531 595.64 T
(Building lar) 207 575.64 T
(g) 274.55 575.64 T
(e tr) 281.41 575.64 T
(ees\321still just as simple) 299.95 575.64 T
(...........................) 434 575.64 T
(5) 531 575.64 T
(A Model for sharing \336les) 207 555.64 T
(...................................................) 350 555.64 T
(8) 531 555.64 T
(Separ) 207 535.64 T
(ating sour) 239.45 535.64 T
(ce and b) 296.11 535.64 T
(uild tr) 343.26 535.64 T
(ees) 377.37 535.64 T
(......................................) 395.5 535.64 T
(10) 531 535.64 T
(V) 207 515.64 T
(ariant b) 214 515.64 T
(uilds) 258.45 515.64 T
(.....................................................................) 287 515.64 T
(11) 531 515.64 T
(Signatur) 207 495.64 T
(es) 254.71 495.64 T
(..........................................................................) 269.5 495.64 T
(12) 531 495.64 T
(Selective b) 207 475.64 T
(uilds) 266.98 475.64 T
(..................................................................) 297.5 475.64 T
(14) 531 475.64 T
(Build Pruning) 207 455.64 T
(.....................................................................) 287 455.64 T
(15) 531 455.64 T
(Bac) 207 435.64 T
(king b) 228.49 435.64 T
(uilds) 262.82 435.64 T
(....................................................................) 290.5 435.64 T
(16) 531 435.64 T
(T) 207 415.64 T
(empor) 213.5 415.64 T
(ary o) 249.06 415.64 T
(verrides) 278.08 415.64 T
(..........................................................) 325.5 415.64 T
(16) 531 415.64 T
(Mor) 207 395.64 T
(e on construction en) 230.59 395.64 T
(vir) 343.96 395.64 T
(onments:) 358.89 395.64 T
(Default construction variables) 207 378.64 T
(..........................................) 381.5 378.64 T
(18) 531 378.64 T
(Default construction methods) 207 358.64 T
(............................................) 374.5 358.64 T
(19) 531 358.64 T
(Extending Cons) 207 338.64 T
(..................................................................) 297.5 338.64 T
(24) 531 338.64 T
(In) 207 318.64 T
(voking Cons) 218.1 318.64 T
(....................................................................) 290.5 318.64 T
(25) 531 318.64 T
(Using and writing dependency scanner) 207 298.64 T
(s) 426.17 298.64 T
(...........................) 434 298.64 T
(26) 531 298.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 27
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 27
%%DocumentFonts: Helvetica-Bold
%%+ Times-Bold
%%+ Times-Italic
%%+ Times-Roman
%%+ Courier
%%+ Helvetica-BoldOblique
%%EOF
